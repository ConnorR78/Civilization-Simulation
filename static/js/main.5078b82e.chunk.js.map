{"version":3,"sources":["components/RetractButton.js","components/MenuComponent.js","scripts/loadScenario.js","components/JsxMarker.js","components/LassoComponent.js","settings/mapProviders.js","scripts/generateUniqueID.js","assets/other/markerIcons.js","components/MapComponent.js","assets/other/defaultColors.js","components/ColorBarComponent.js","components/ToolbarComponent.js","plugins/LegendPlugin.js","plugins/RegionInfoPlugin.js","scripts/createScenarioEntry.js","plugins/AltHistEditorLoaderPlugin.js","plugins/ScenarioPlugin.js","plugins/CustomGeoJSONLoaderPlugin.js","plugins/ThemePlugin.js","plugins/MarkerPlugin.js","appPlugins.js","components/PluginMenuComponent.js","components/TimelineAddButton.js","components/TimelineMarker.js","components/TimelineBarComponent.js","scripts/useWindowSize.js","components/TimelineEventComponent.js","assets/img/MarbleTexture.jpg","assets/img/GoldTexture.png","themes/default.js","scripts/createRegionDict.js","assets/other/joyrideSteps.js","App.js","scripts/saveScenario.js","index.js"],"names":["transformDict","useStyles","makeStyles","theme","retractButton","position","width","height","backgroundColor","palette","background","light","borderBottomLeftRadius","borderBottomRightRadius","display","justifyContent","alignItems","textAlign","marginLeft","marginTop","visibility","RetractButton","props","classes","transform","direction","Icon","checked","UpIcon","DownIcon","className","onClick","style","top","left","size","menuContainer","zIndex","flexFlow","borderBottomStyle","borderRightStyle","borderColor","border","backgroundImage","main","WebkitBorderImage","borderImage","menuButton","fontSize","margin","padding","MenuComponent","React","useState","setDisplay","Slide","in","unmountOnExit","mountOnEnter","id","Button","window","location","reload","save","onDrop","acceptedFiles","file","onload","text","then","obj","JSON","parse","loadScenario","loadSave","getRootProps","getInputProps","openHelp","memo","JsxMarkerContent","ref","html","innerHTML","this","previousHtml","onRender","onRef","bind","children","Component","JsxMarker","state","markerRef","createRef","setState","marker","icon","divIcon","iconSize","Marker","draggable","eventHandlers","dragend","updatePosition","markerID","current","getLatLng","editable","removable","closeButton","autoClose","closeOnClick","saveContentCallback","content","updateContent","removalCallback","index","removeMarker","Fragment","onInsideRender","LassoComponent","eventHandler","event","indices","layers","forEach","layer","feature","properties","regionID","push","updateLassoSelecting","assignRegions","map","useMap","lasso","L","setOptions","intersect","enable","useEffect","addEventListener","disable","removeEventListener","mapProviders","name","attr","src","generateUniqueID","Math","floor","random","markerIcons","GiWarAxe","GiAxeSword","GiBloodySword","GiBroadsword","GiCrossedSwords","GiDervishSwords","GiAntiAircraftGun","GiFieldGun","GiSaberAndPistol","GiPistolGun","GiRevolver","GiWinchesterRifle","GiApc","GiHorseHead","GiCavalry","GiTankTread","GiTank","GiBattleTank","GiModernCity","GiLighthouse","GiHouse","GiRefinery","GiFamilyHouse","GiCastle","GiElvenCastle","GiSteamLocomotive","GiStoneTower","GiBarracks","GiBarracksTent","GiAqueduct","GiCargoShip","GiBattleship","GiShipBow","GiShipWheel","GiSinagot","GiShoonerSailboat","GiEagleEmblem","GiWingedEmblem","GiHawkEmblem","GiSteelwingEmblem","GiSwordsEmblem","GiCondorEmblem","GiRadioactive","GiRadarSweep","GiSpikedDragonHead","GiRoundStar","GiSeaDragon","GiSeaSerpent","MapComponent","markerData","getMarkerData","geojsonRef","mapElement","onEachFeature","resetAllRegionStyle","clickRegion","highlightRegion","resetHighlightRegion","resetSpecifiedRegionStyle","addMarker","updateMarkerPosition","updateMarkerData","updateMarkerContent","currentData","cloneDeep","lat","lng","iconIndex","color","callback","lassoSelecting","processRegionHoveredOn","processRegionHoveredOut","getRegionColorByIndex","themeDict","polyStrokeColor","weight","polyStrokeWeight","fillColor","polyFillColorDefault","fillOpacity","polyFillOpacityColored","polyFillOpacityDefault","polyFillOpacityHovered","setStyle","hightlightStyle","picking","setColorBarColor","Object","values","_layers","markers","entries","markerSize","markerIcon","MapContainer","center","zoom","scrollWheelZoom","preferCanvas","zoomSnap","wheelPxPerZoomLevel","doubleClickZoom","zoomControl","attributionControl","worldCopyJump","whenCreated","mapContainer","LayersControl","entry","BaseLayer","TileLayer","attribution","url","Overlay","GeoJSON","data","baseMap","smoothFactor","FeatureGroup","activeEntry","AttributionControl","PureComponent","withStyles","filter","defaultColors","ColorBarComponent","colorHex","colorBarContainer","currentColor","sliderPickerContainer","onChange","hex","compactPickerContainer","compactPicker","colors","borderStyle","rgbInput","toolbarContainer","right","marginRight","toolbarButton","ToolbarComponent","lassoButtonText","lassoButtonColor","eraserButtonText","erasing","eraserButtonColor","pickingButtonText","pickingButtonColor","updatePicking","updateErasing","legendContainer","legendEntry","legendEntryColor","legendEntryLabel","legendEntryNum","legendGrid","totalLabel","displayNumSwitch","displayNumSwitchContainer","LegendEntry","InputBase","value","label","displayNum","Typography","variant","num","LegendPluginDict","component","setDisplayNum","keys","app","pluginData","colorData","item","e","currentLegendData","target","updatePluginData","FormControlLabel","control","Switch","labelPlacement","features","length","Grid","container","justify","wrap","initState","scenarioData","i","retval","help","functions","onAssignRegions","removedColors","addedColor","onAddEntry","newLegendEntry","splice","onDeleteEntry","regionInfoContainer","paddingLeft","regionInfoColor","primary","regionInfoLabel","paddingTop","paddingBottom","RegionInfoPluginDict","themeDictDefault","other","onProcessRegionHoveredOn","regionDict","newRegionInfoData","createScenarioEntry","date","csscolors","altHistEditorLoaderContainer","paper","loaderDropzone","default","loader","currentSaveVersion","version","detectSaveVersion","processSave","one_zero_to_one_one","one_one_to_one_two","customMap","customMapGeojson","order","entryDict","AltHistEditorLoaderPluginDict","mapType","convertedObj","regionDictDefault","mapData","colorStringDict","colorEntry","plugins","legendData","console","log","scenarios","scen356BC","scen1206","scen1444","scen1936","comScenarios","scen1914","scen2021","scenarioContainer","scenarioSelect","ScenarioPluginDict","selectedScenario","setSelectedScenario","Select","key","MenuItem","customGeoJSONLoaderContainer","CustomGeoJSONLoaderPluginDict","resetAppBasedOnBasemap","mapKey","loadGeoJSON","themeContainer","themeInput","custTheme","custThemeType","typeConvFunc","String","Number","fieldLabels","ThemePluginDict","setThemeDict","fields","includes","TextField","type","newTheme","IconButton","mapRef","markerContainer","iconSelect","iconDisplay","iconColorInput","iconList","iconListEntry","markerHelp","IconSelector","anchorEl","setAnchorEl","handleClick","currentTarget","open","Boolean","undefined","iconChoices","MarkerIcon","updateIconIndex","Popper","disablePortal","RegionInfoPlugin","LegendPlugin","setColor","setIconIndex","align","Input","getBounds","getCenter","onUpdateActiveEntry","newIndex","currentMarkerData","newMarkerEntry","ScenarioPlugin","ThemePlugin","AltHistEditorLoaderPlugin","CustomGeoJSONLoaderPlugin","pluginMenuContainer","bottom","minWidth","minHeight","borderTopStyle","borderLeftStyle","accordionContainer","paddingRight","accordionSummary","accordionDetails","accordionHelp","PluginMenuComponent","accordionItems","Plugin","Accordion","defaultExpanded","square","AccordionSummary","expandIcon","IconButtonProps","Tooltip","title","AccordionDetails","addIconButtonContainer","addIconButton","secondary","TimelineAddButton","timelineMarkerSpacing","addEntry","timelineMarker","entryButton","markerLabel","textOverflow","overflow","whiteSpace","TimelineMarker","selected","timelineMarkerLabelWidth","updateActiveEntry","timelineBarContainer","timelineLine","timelineBarContentContainer","timelineBarMarkerContainer","TimelineBarComponent","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","useWindowSize","lineLength","max","eventContainer","eventBar","eventButtonHolder","eventContent","flexGrow","resize","eventButton","dateInput","TimelineEventComponent","updateEventDate","clearEntry","deleteEntry","disabled","oneEntryLeft","updateEvent","multiline","material","dark","GoldTexture","MarbleTexture","createRegionDict","geoJson","region","steps","href","placement","ReactGA","initialize","pageview","pathname","search","createMuiTheme","App","mapAdmin","scenarioDataDefault","helpOn","colorBarRef","getColor","updateMultiPluginData","runPluginFunc","handleJoyrideCallback","initUndefinedPluginData","args","val","newState","dataDict","currentColorData","newRegionDict","newColorEntry","previousColor","blob","Blob","stringify","saveAs","saveScenario","currentPluginData","saveData","EVENTS","TOUR_END","ThemeProvider","continuous","disableOverlayClose","disableCloseOnEsc","showProgress","showSkipButton","run","styles","buttonClose","buttonSkip","ReactDOM","render","document","getElementById"],"mappings":"0rp5JAMMA,EAAgB,CAClB,GAAM,eACN,KAAQ,iBACR,MAAS,gBACT,KAAQ,kBAGNC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,cAAe,CACXC,SAAU,WACVC,MAAO,IACPC,OAAQ,GACRC,gBAAiBL,EAAMM,QAAQC,WAAWC,MAC1CC,uBAAwB,GACxBC,wBAAyB,GACzBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,UAAW,SACXC,YAAa,GACbC,WAAY,EACZC,WAAY,eAuBLC,MAnBf,SAAuBC,GACnB,IAAMC,EAAUtB,IACVuB,EAAYxB,EAAcsB,EAAMG,WAChCC,EAAOJ,EAAMK,QAAUC,IAASC,IACtC,OACI,qBACIC,UAAWP,EAAQnB,cACnB2B,QAAST,EAAMS,QACfC,MAAO,CACHR,UAAW,aAAeA,EAC1BS,IAAKX,EAAMW,IACXC,KAAMZ,EAAMY,MANpB,SASI,cAACR,EAAD,CAAMS,KAAK,aCnCjBlC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiC,cAAe,CACX/B,SAAU,WACV4B,IAAK,EACLC,KAAM,EACN3B,OAAQ,GACRD,MAAO,IACP+B,OAAQ,EACRvB,QAAS,OACTwB,SAAU,MACVvB,eAAgB,aAChBwB,kBAAmB,QACnBC,iBAAkB,QAClBC,YAAatC,EAAMM,QAAQiC,OAC3BC,gBAAiBxC,EAAMM,QAAQkC,gBAAgBC,KAC/CC,kBAAmB1C,EAAMM,QAAQqC,aAErCC,WAAY,CACRC,SAAU,GACVC,OAAQ,EACRC,QAAS,EACT3C,OAAQ,YAIhB,SAAS4C,EAAc7B,GACnB,IAAMC,EAAUtB,IADU,EAEImD,IAAMC,UAAS,GAFnB,mBAEnBvC,EAFmB,KAEVwC,EAFU,KAG1B,OACI,cAACC,EAAA,EAAD,CAAO9B,UAAU,OAAO+B,GAAI1C,EAAS2C,eAAe,EAAOC,cAAc,EAAzE,SACI,sBAAK5B,UAAWP,EAAQa,cAAeuB,GAAG,OAA1C,UACI,cAACC,EAAA,EAAD,CAAQzB,KAAK,QAAQL,UAAWP,EAAQwB,WAAYhB,QAAS,kBAAM8B,OAAOC,SAASC,UAAnF,iBACA,cAACH,EAAA,EAAD,CAAQzB,KAAK,QAAQL,UAAWP,EAAQwB,WAAYhB,QAAST,EAAM0C,KAAnE,kBACA,cAAC,IAAD,CACIC,OAAQ,SAAAC,IC1Cb,SAAsBC,GAAoB,IAAdC,EAAa,uDAAN,KAC9CD,EAAKE,OAAOC,MAAK,SAAAD,GACb,IAAME,EAAMC,KAAKC,MAAMJ,GACnBD,GACAA,EAAOG,MDuCKG,CAAaR,EAAc,GAAI5C,EAAMqD,WAF7C,SAOK,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACG,gDAASD,KAAT,cACI,qCAAWC,MACX,cAACjB,EAAA,EAAD,CAAQzB,KAAK,QAAQL,UAAWP,EAAQwB,WAAxC,yBAKZ,cAACa,EAAA,EAAD,CAAQzB,KAAK,QAAQL,UAAWP,EAAQwB,WAAYhB,QAAST,EAAMwD,SAAnE,kBACA,cAAC,EAAD,CAAerD,UAAU,KAAKQ,IAAK,GAAIC,KAAM,MAAOP,QAASb,EAASiB,QAAS,kBAAMuB,GAAYxC,WAMlGsC,UAAM2B,KAAK5B,G,0GEzDpB6B,G,kKAEF,SAAMC,GAEF,GAAIA,EAAK,CACL,IAAMC,EAAOD,EAAIE,UACbD,IAASE,KAAKC,eACdD,KAAK9D,MAAMgE,SAASJ,GACpBE,KAAKC,aAAeH,M,oBAMhC,WACI,OACI,qBAAKpD,UAAU,aAAaE,MAAO,CAAElB,QAAS,QAAUmE,IAAKG,KAAKG,MAAMC,KAAKJ,MAA7E,SACKA,KAAK9D,MAAMmE,e,GAjBGrC,IAAMsC,YAmGtBC,E,kDApEX,WAAYrE,GAAQ,IAAD,8BACf,cAAMA,IACDsE,MAAQ,CACTV,KAAM,MAGV,EAAKW,UAAYzC,IAAM0C,UAAU,MANlB,E,kDASnB,SAAeZ,GAGXE,KAAKW,SAAS,CAAEb,W,oBAGpB,WAAU,IAAD,OAEGA,EAASE,KAAKQ,MAAdV,KACJc,GAAS,EACb,GAAId,EAAM,CAGN,IAAMe,EAAOC,kBAAQ,CACjBpE,UAAWsD,KAAK9D,MAAMQ,UACtBoD,OACAiB,SAAU,CAACf,KAAK9D,MAAMa,KAAMiD,KAAK9D,MAAMa,QAE3C6D,EAAS,cAACI,EAAA,EAAD,yBACLC,WAAS,EACThG,SAAU+E,KAAK9D,MAAMjB,SACrB4E,IAAKG,KAAKS,UACVI,KAAMA,GAAUb,KAAK9D,OAJhB,IAKLgF,cAAe,CACXC,QAAS,WACL,EAAKjF,MAAMkF,eAAe,EAAKlF,MAAMmF,SAAU,EAAKZ,UAAUa,QAAQC,eAPzE,SAWL,cAAC,IAAD,CACIC,UAAQ,EACRC,WAAS,EACTC,aAAa,EACbC,WAAW,EACXC,cAAc,EACdC,oBAAqB,SAAAC,GAAO,OAAI,EAAK5F,MAAM6F,cAAc,EAAK7F,MAAMmF,SAAUS,IAC9EE,gBAAiB,SAAAC,GAAK,OAAI,EAAK/F,MAAMgG,aAAa,EAAKhG,MAAMmF,WAPjE,SASKrB,KAAK9D,MAAM4F,aAOxB,OAAQ,eAAC,IAAMK,SAAP,WAEJ,cAAC,EAAD,CAAkBjC,SAAU,SAAAJ,GAAI,OAAI,EAAKsC,eAAetC,IAAxD,SACKE,KAAK9D,MAAMmE,WAGfO,S,GAnEW5C,IAAMsC,W,eC3Bf,SAAS+B,EAAenG,GAEnC,IAAMoG,EAAe,SAAAC,GACjB,IAAIC,EAAU,GACVD,GACIA,EAAME,QACNF,EAAME,OAAOC,SAAQ,SAAAC,GACbA,GACIA,EAAMC,SACFD,EAAMC,QAAQC,YACVF,EAAMC,QAAQC,WAAWC,UACzBN,EAAQO,KAAKJ,EAAMC,QAAQC,WAAWC,aAQlE5G,EAAM8G,sBAAqB,GAAO,WAAO9G,EAAM+G,cAAcT,OAI3DU,EAAMC,cACNC,EAAQC,IAAED,MAAMF,GActB,OAbAE,EAAME,WAAW,CAAEC,WAAW,IAC9BH,EAAMI,SAENxF,IAAMyF,WAAU,WAIZ,OAFAP,EAAIQ,iBAAiB,iBAAkBpB,GAE/B,WACJc,EAAMO,UACNT,EAAIU,oBAAoB,iBAAkBtB,MAE/C,CAACY,EAAKE,IAEF,KC1CX,IAsCeS,EAtCM,CACjB,CACIC,KAAM,oBACNC,KAAM,gJACNC,IAAK,iGAET,CACIF,KAAM,YACNC,KAAM,GACNC,IAAK,IAET,CACIF,KAAM,cACNC,KAAM,sSACNC,IAAK,oDAET,CACIF,KAAM,uBACNC,KAAM,0FACNC,IAAK,sDAET,CACIF,KAAM,2BACNC,KAAM,0OACNC,IAAK,mFAET,CACIF,KAAM,oBACNC,KAAM,0OACNC,IAAK,wEAET,CACIF,KAAM,yBACNC,KAAM,0OACNC,IAAK,kF,iBC1BEC,MATf,SAASA,EAAiB9E,GACtB,IAAIZ,EAAK2F,KAAKC,MAAsB,IAAhBD,KAAKE,UACzB,OAAI7F,KAAMY,EACC8E,EAAiB9E,GAEjBZ,G,QCiBA8F,EAXK,CAChBC,IAAUC,IAAYC,IAAeC,IAAcC,IAAiBC,IACpEC,IAAmBC,IAAYC,IAAkBC,IAAaC,IAAYC,IAC1EC,IAAOC,IAAaC,IAAWC,IAAaC,IAAQC,IACpDC,IAAcC,IAAcC,IAASC,IAAYC,IAAeC,IAChEC,IAAeC,IAAmBC,IAAcC,IAAYC,IAAgBC,IAC5EC,IAAaC,IAAcC,IAAWC,IAAaC,IAAWC,IAC9DC,IAAeC,IAAgBC,IAAcC,IAAmBC,IAAgBC,IAChFC,IAAeC,IAAcC,IAAoBC,IAAaC,IAAaC,KCgBzEC,G,kDACF,WAAYpL,GAAQ,IAAD,8BACf,cAAMA,IAEDsE,MAAQ,CACT+G,WAAYrL,EAAMsL,iBAItB,EAAKC,WAAazJ,IAAM0C,UAAU,MAClC,EAAKgH,WAAa,KAGlB,EAAKC,cAAgB,EAAKA,cAAcvH,KAAnB,gBACrB,EAAKxD,MAAQ,EAAKA,MAAMwD,KAAX,gBACb,EAAKwH,oBAAsB,EAAKA,oBAAoBxH,KAAzB,gBAC3B,EAAKyH,YAAc,EAAKA,YAAYzH,KAAjB,gBACnB,EAAK0H,gBAAkB,EAAKA,gBAAgB1H,KAArB,gBACvB,EAAK2H,qBAAuB,EAAKA,qBAAqB3H,KAA1B,gBAC5B,EAAK4H,0BAA4B,EAAKA,0BAA0B5H,KAA/B,gBACjC,EAAK6H,UAAY,EAAKA,UAAU7H,KAAf,gBACjB,EAAK8H,qBAAuB,EAAKA,qBAAqB9H,KAA1B,gBAC5B,EAAK+H,iBAAmB,EAAKA,iBAAiB/H,KAAtB,gBACxB,EAAKgI,oBAAsB,EAAKA,oBAAoBhI,KAAzB,gBAC3B,EAAK8B,aAAe,EAAKA,aAAa9B,KAAlB,gBAvBL,E,gDA0BnB,SAAaiB,GAAW,IAAD,OACfgH,EAAcC,IAAUtI,KAAKQ,MAAM+G,mBAEhCc,EAAYhH,GAEnBrB,KAAKW,SAAS,CAAE4G,WAAYc,IAAe,WACvC,EAAKnM,MAAMiM,iBAAiB,EAAK3H,MAAM+G,iB,kCAI/C,SAAqBlG,EAAUpG,GAAW,IAAD,OACjCoN,EAAcC,IAAUtI,KAAKQ,MAAM+G,YAEvCc,EAAYhH,GAAUkH,IAAMtN,EAASsN,IACrCF,EAAYhH,GAAUmH,IAAMvN,EAASuN,IAErCxI,KAAKW,SAAS,CAAE4G,WAAYc,IAAe,WACvC,EAAKnM,MAAMiM,iBAAiB,EAAK3H,MAAM+G,iB,iCAI/C,SAAoBlG,EAAUS,GAAU,IAAD,OAC/BuG,EAAcC,IAAUtI,KAAKQ,MAAM+G,YAEvCc,EAAYhH,GAAUS,QAAUA,EAEhC9B,KAAKW,SAAS,CAAE4G,WAAYc,IAAe,WACvC,EAAKnM,MAAMiM,iBAAiB,EAAK3H,MAAM+G,iB,uBAI/C,SAAUkB,EAAWC,GAAyC,IAAD,OAAjCH,EAAiC,uDAA3B,GAAIC,EAAuB,uDAAjB,EAAG1G,EAAc,uDAAJ,GACjDuG,EAAcC,IAAUtI,KAAKQ,MAAM+G,YAGjChJ,EAAK0F,EAAiBoE,GAE5BA,EAAY9J,GAAM,CACdkK,UAAWA,EACXC,MAAOA,EACPH,IAAKA,EACLC,IAAKA,EACL1G,QAASA,GAEb9B,KAAKW,SAAS,CAAE4G,WAAYc,IAAe,WACvC,EAAKnM,MAAMiM,iBAAiB,EAAK3H,MAAM+G,iB,8BAK/C,WAAiC,IAAhBoB,EAAe,uDAAN,KACtB3I,KAAKW,SAAS,CAAE4G,WAAYvH,KAAK9D,MAAMsL,kBAAmB,WAClDmB,GACAA,S,2BAKZ,SAAc/F,EAASD,GAAQ,IAAD,OAC1BA,EAAMe,iBAAiB,SAAS,WAC5B,EAAKmE,YAAYjF,EAASD,MAE9BA,EAAMe,iBAAiB,aAAa,WAC3B,EAAKxH,MAAM0M,iBAEZ,EAAKd,gBAAgBlF,EAASD,GAC9B,EAAKzG,MAAM2M,uBAAuBlG,OAG1CA,EAAMe,iBAAiB,YAAY,WAC1B,EAAKxH,MAAM0M,iBAEZ,EAAKb,qBAAqBnF,EAASD,GACnC,EAAKzG,MAAM4M,wBAAwBnG,S,mBAK/C,SAAMC,EAASD,GACX,IAAM+F,EAAQ1I,KAAK9D,MAAM6M,sBAAsBnG,EAAQC,WAAWC,UAClE,MAAO,CACH4F,MAAO1I,KAAK9D,MAAM8M,UAAUC,gBAC5BC,OAAQlJ,KAAK9D,MAAM8M,UAAUG,iBAC7BC,UAAWV,GAAgB1I,KAAK9D,MAAM8M,UAAUK,qBAChDC,YAAaZ,EAAQ1I,KAAK9D,MAAM8M,UAAUO,uBAAyBvJ,KAAK9D,MAAM8M,UAAUQ,0B,6BAKhG,SAAgB5G,EAASD,GACrB,MAAO,CACH2G,YAAatJ,KAAK9D,MAAM8M,UAAUS,0B,6BAI1C,SAAgB7G,EAASD,GACrBA,EAAM+G,SAAS1J,KAAK2J,gBAAgB/G,EAASD,M,kCAGjD,SAAqBC,EAASD,GAC1BA,EAAM+G,SAAS1J,KAAKpD,MAAMgG,EAASD,M,yBAGvC,SAAYC,EAASD,GACjB,GAAI3C,KAAK9D,MAAM0N,QAAS,CACpB,IAAMlB,EAAQ1I,KAAK9D,MAAM6M,sBAAsBnG,EAAQC,WAAWC,UAC9D4F,GAEA1I,KAAK9D,MAAM2N,iBAAiBnB,QAIhC1I,KAAK9D,MAAM+G,cAAc,CAACL,EAAQC,WAAWC,WAC7CH,EAAM+G,SAAS1J,KAAKpD,MAAMgG,EAASD,M,iCAK3C,WAAuB,IAAD,OAClBmH,OAAOC,OAAO/J,KAAKyH,WAAWnG,QAAQ0I,SAAStH,SAAQ,SAAAC,GACnDA,EAAM+G,SAAS,EAAK9M,MAAM+F,EAAMC,QAASD,S,uCAKjD,SAA0BH,GAAU,IAAD,OAC3BC,EAASqH,OAAOC,OAAO/J,KAAKyH,WAAWnG,QAAQ0I,SACnDxH,EAAQE,SAAQ,SAAAT,GACZ,IAAIU,EAAQF,EAAOR,GACfW,EAAUD,EAAMC,QACpBH,EAAOR,GAAOyH,SAAS,EAAK9M,MAAMgG,EAASD,S,oBAInD,WAAU,IAAD,OACGxG,EAAY6D,KAAK9D,MAAjBC,QAEF8N,EAAUH,OAAOI,QAAQlK,KAAKQ,MAAM+G,YAAYrE,KAAI,SAAAtC,GACtD,IAAMtE,EAAO+H,EAAYzD,EAAO,GAAG6H,WACnC,OACI,cAAC,EAAD,CAEIpH,SAAUT,EAAO,GACjB3F,SAAU,CACNsN,IAAK3H,EAAO,GAAG2H,IACfC,IAAK5H,EAAO,GAAG4H,KAEnBzL,KAAM,EAAKb,MAAM8M,UAAUmB,WAC3BrI,QAASlB,EAAO,GAAGkB,QACnBV,eAAgB,EAAK8G,qBACrBnG,cAAe,EAAKqG,oBACpBlG,aAAc,EAAKA,aAXvB,SAaI,cAAC5F,EAAD,CAAMI,UAAWP,EAAQiO,WAAYxN,MAAO,CAAE8L,MAAO9H,EAAO,GAAG8H,UAZ1D9H,EAAO,OAiBxB,OACI,eAACyJ,EAAA,EAAD,CACIC,OAAQ,CAAC,GAAI,GACbC,KAAM,EACNC,iBAAe,EACfC,cAAY,EACZC,SAAU,EACVC,oBAAqB,IACrBC,iBAAiB,EACjBC,aAAa,EACbC,oBAAoB,EACpBC,eAAa,EACbxM,GAAG,MACHyM,YAAa,SAAA9H,GAAQ,EAAKwE,WAAaxE,GACvCxG,UAAWP,EAAQ8O,aAbvB,UAeI,eAACC,EAAA,EAAD,CAAejQ,SAAS,WAAxB,UACK4I,EAAaX,KAAI,SAACiI,EAAOlJ,GAAR,OAAkB,cAACiJ,EAAA,EAAcE,UAAf,CAA0C7O,QAAmB,IAAV0F,EAAa6B,KAAMqH,EAAMrH,KAA5E,SAChC,cAACuH,EAAA,EAAD,CACIC,YAAaH,EAAMpH,KACnBwH,IAAKJ,EAAMnH,OAH+CmH,EAAMrH,SAMxE,cAACoH,EAAA,EAAcM,QAAf,CAAuBjP,SAAO,EAACuH,KAAK,UAApC,SACI,cAAC2H,EAAA,EAAD,CACIC,KAAM1L,KAAK9D,MAAMyP,QACjB/O,MAAOoD,KAAKpD,MACZ+K,cAAe3H,KAAK2H,cACpBiE,aAAc,EACd/L,IAAKG,KAAKyH,eAGlB,cAACyD,EAAA,EAAcM,QAAf,CAAuBjP,SAAO,EAACuH,KAAK,UAApC,SACI,cAAC+H,EAAA,EAAD,UACK5B,GADcjK,KAAK9D,MAAM4P,kBAKtC,cAACC,EAAA,EAAD,CAAoB9Q,SAAS,gBAC5B+E,KAAK9D,MAAM0M,gBAAkB,cAACvG,EAAD,CAAgBW,qBAAsBhD,KAAK9D,MAAM8G,qBAAsBC,cAAejD,KAAK9D,MAAM+G,uB,GAhOpHjF,IAAMgO,eAsOlBC,gBArPG,SAAAlR,GAAK,MAAK,CACxBkQ,aAAc,CACVhQ,SAAU,WACV4B,IAAK,EACLC,KAAM,EACN5B,MAAO,QACPC,OAAQ,qBACR8B,OAAQ,EACRiP,OAAQ,gCAEZ9B,WAAY,CACRlP,MAAO,OACPC,OAAQ,WAyOD8Q,CAAsB3E,I,UClQtB6E,GAPO,CAClB,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WC2DrDC,G,kDACF,WAAYlQ,GAAQ,IAAD,8BACf,cAAMA,IACDsE,MAAQ,CACTkI,MAAO,UACPhN,SAAS,GAJE,E,0CAQnB,WAAU,IAAD,OACGS,EAAY6D,KAAK9D,MAAjBC,QACFkQ,EAAWrM,KAAKQ,MAAMkI,MAC5B,OACI,cAACvK,EAAA,EAAD,CAAO9B,UAAU,OAAO+B,GAAI4B,KAAKQ,MAAM9E,QAAS2C,eAAe,EAAOC,cAAc,EAApF,SACI,sBAAK5B,UAAWP,EAAQmQ,kBAAmB/N,GAAG,WAA9C,UACI,qBAAK7B,UAAWP,EAAQoQ,aAAc3P,MAAO,CAAExB,gBAAiBiR,KAChE,qBAAK3P,UAAWP,EAAQqQ,sBAAxB,SACI,cAAC,KAAD,CAAc9D,MAAO2D,EAAUI,SAAU,SAAC/D,EAAOnG,GAAR,OAAkB,EAAK5B,SAAS,CAAE+H,MAAOA,EAAMgE,WAE5F,qBAAKhQ,UAAWP,EAAQwQ,uBAAxB,SACI,cAAC,KAAD,CAAejQ,UAAWP,EAAQyQ,cAAelE,MAAO2D,EAAUQ,OAAQV,GAAeM,SAAU,SAAC/D,EAAOnG,GAAR,OAAkB,EAAK5B,SAAS,CAAE+H,MAAOA,EAAMgE,WAEtJ,cAAC,EAAD,CAAerQ,UAAU,KAAKQ,IAAK,GAAIC,KAAM,GAAIP,QAASyD,KAAKQ,MAAM9E,QAASiB,QAAS,kBAAM,EAAKgE,SAAS,CAAEjF,SAAU,EAAK8E,MAAM9E,sB,GAtBtHsC,IAAMgO,eA6BvBC,gBAhFG,SAAAlR,GAAK,MAAK,CACxBuR,kBAAmB,CACfrR,SAAU,WACV4B,IAAK,EACLC,KAAM,MACN5B,MAAO,IACPC,OAAQ,GACR8B,OAAQ,EACRvB,QAAS,OACTC,eAAgB,gBAChBuB,SAAU,MACVtB,WAAY,SACZE,YAAa,IACbC,UAAW,GACX+B,QAAS,EACTgP,YAAa,QACbzP,YAAatC,EAAMM,QAAQiC,OAC3BC,gBAAiBxC,EAAMM,QAAQkC,gBAAgBC,KAC/CC,kBAAmB1C,EAAMM,QAAQqC,aAErC8O,sBAAuB,CACnB9Q,QAAS,OACTC,eAAgB,SAChBuB,SAAU,SACVtB,WAAY,UACZV,MAAO,KAEXyR,uBAAwB,CACpBjR,QAAS,OACTC,eAAgB,SAChBuB,SAAU,SACVtB,WAAY,UACZV,MAAO,IACP2C,QAAS,GACTzB,UAAW,cAEf2Q,SAAU,CACNrR,QAAS,OACTC,eAAgB,SAChBuB,SAAU,OAEdqP,aAAc,CACVpR,OAAQ,GACRD,MAAO,GACP2C,OAAQ,GAEZ+O,cAAe,CACXxR,gBAAiBL,EAAMM,QAAQC,WAAWC,UAiCnC0Q,CAAsBG,ICnF/BvR,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCiS,iBAAkB,CACd/R,SAAU,WACV4B,IAAK,IACLoQ,MAAO,MACPC,aAAa,IACb/R,OAAQ,GACRD,MAAO,IACP+B,OAAQ,EACRvB,QAAS,OACTwB,SAAU,MACVvB,eAAgB,WAChBmR,YAAa,QACbzP,YAAatC,EAAMM,QAAQiC,OAC3BC,gBAAiBxC,EAAMM,QAAQkC,gBAAgBC,KAC/CC,kBAAmB1C,EAAMM,QAAQqC,aAErCyP,cAAe,CACXvP,SAAU,GACVC,OAAQ,EACRC,QAAS,EACT3C,OAAQ,YAIhB,SAASiS,GAAiBlR,GACtB,IAAMC,EAAUtB,KACVwS,EAAkBnR,EAAM0M,eAAiB,SAAW,QACpD0E,EAAmBpR,EAAM0M,eAAiB,YAAc,UACxD2E,EAAmBrR,EAAMsR,QAAU,SAAW,QAC9CC,EAAoBvR,EAAMsR,QAAU,YAAc,UAClDE,EAAoBxR,EAAM0N,QAAU,SAAW,OAC/C+D,EAAqBzR,EAAM0N,QAAU,YAAc,UAP5B,EAQC5L,IAAMC,UAAS,GARhB,mBAQtBvC,EARsB,KAQbwC,EARa,KAS7B,OACI,cAACC,EAAA,EAAD,CAAO9B,UAAU,OAAO+B,GAAI1C,EAAS2C,eAAe,EAAOC,cAAc,EAAzE,SACI,sBAAK5B,UAAWP,EAAQ6Q,iBAAkBzO,GAAG,UAA7C,UACI,cAACC,EAAA,EAAD,CACIkK,MAAO+E,EACP/Q,UAAWP,EAAQgR,cACnBxQ,QAAS,WACLT,EAAM0R,eAAc,GAAO,WACvB1R,EAAM2R,eAAe3R,EAAMsR,aALvC,SASKD,IAEL,cAAC/O,EAAA,EAAD,CACIkK,MAAO4E,EACP5Q,UAAWP,EAAQgR,cACnBxQ,QAAS,WACLT,EAAM0R,eAAc,GAAO,WACvB1R,EAAM8G,sBAAsB9G,EAAM0M,oBAL9C,SASKyE,IAEL,cAAC7O,EAAA,EAAD,CACIkK,MAAOiF,EACPjR,UAAWP,EAAQgR,cACnBxQ,QAAS,WACLT,EAAM8G,sBAAqB,GAAO,WAC9B9G,EAAM2R,eAAc,GAAO,WACvB3R,EAAM0R,eAAe1R,EAAM0N,gBAN3C,SAWK8D,IAEL,cAAC,EAAD,CAAerR,UAAU,KAAKQ,IAAK,GAAIC,KAAM,MAAOP,QAASb,EAASiB,QAAS,kBAAMuB,GAAYxC,WAMlGsC,WAAM2B,KAAKyN,I,sEC7EpBvS,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC+S,gBAAiB,CACb3S,OAAQ,IACRD,MAAO,OACPQ,QAAS,OACTwB,SAAU,SACVvB,eAAgB,gBAEpBoS,YAAa,CACTrS,QAAS,OACTwB,SAAU,MACVtB,WAAY,SACZD,eAAgB,cAEpBqS,iBAAkB,CACd9S,MAAO,GACPC,OAAQ,GACR0C,OAAQ,GAEZoQ,iBAAkB,CACd/S,MAAO,GACP0C,SAAU,IAEdsQ,eAAgB,CACZpS,WAAY,EACZoR,YAAa,EACbtP,SAAU,IAEduQ,WAAY,CACRhT,OAAQ,KAEZiT,WAAY,CACR1S,QAAS,OACTwB,SAAU,SACVvB,eAAgB,SAChBC,WAAY,SACZQ,UAAW,cAEfiS,iBAAkB,CACdjS,UAAW,cAEfkS,0BAA2B,CACvB5S,QAAS,OACTwB,SAAU,SACVvB,eAAgB,SAChBC,WAAY,gBAIpB,SAAS2S,GAAYrS,GACjB,IAAMC,EAAUtB,KAChB,OACI,sBAAK6B,UAAWP,EAAQ4R,YAAxB,UACI,qBACInR,MAAO,CAAExB,gBAAiBc,EAAMwM,OAChChM,UAAWP,EAAQ6R,iBACnBrR,QAAS,WACLT,EAAM2N,iBAAiB3N,EAAMwM,UAGrC,cAAC8F,GAAA,EAAD,CACI9R,UAAWP,EAAQ8R,iBACnBQ,MAAOvS,EAAMwS,MACbjC,SAAUvQ,EAAMuQ,WAEnBvQ,EAAMyS,YAAc,cAACC,GAAA,EAAD,CAAYC,QAAQ,UAAUnS,UAAWP,EAAQ+R,eAAjD,SAAkEhS,EAAM4S,SAqFzG,IAWeC,GAXU,CACrBC,UAjFJ,SAAyB9S,GACrB,IAAMC,EAAUtB,KADY,EAEQmD,IAAMC,UAAS,GAFvB,mBAErB0Q,EAFqB,KAETM,EAFS,KAGtB/E,EAAUJ,OAAOoF,KAAKhT,EAAMiT,IAAI3O,MAAM4O,WAAhB,OAAqClT,EAAMiT,IAAI3O,MAAMsL,cAAc5I,KAAI,SAACwF,GAAD,OAC/F,cAAC6F,GAAD,CAEI7F,MAAOA,EACPgG,MAAOxS,EAAMiT,IAAI3O,MAAM4O,WAAhB,OAAqClT,EAAMiT,IAAI3O,MAAMsL,aAAapD,GACzEoG,IAAK5S,EAAMiT,IAAI3O,MAAM6O,UAAUnT,EAAMiT,IAAI3O,MAAMsL,aAAapD,GAC5DiG,WAAYA,EACZW,MAAI,EACJ7C,SAAU,SAAA8C,GACN,IAAIC,EAAoBlH,IAAUpM,EAAMiT,IAAI3O,MAAM4O,WAAhB,QAClCI,EAAkBtT,EAAMiT,IAAI3O,MAAMsL,aAAapD,GAAS6G,EAAEE,OAAOhB,MACjEvS,EAAMiT,IAAIO,iBAAiB,SAAUF,IAEzC3F,iBAAkB3N,EAAMiT,IAAItF,kBAXvBnB,MAab,OACI,sBAAKhM,UAAWP,EAAQ2R,gBAAxB,UACI,qBAAKpR,UAAWP,EAAQmS,0BAAxB,SACI,cAACqB,GAAA,EAAD,CACIjT,UAAWP,EAAQkS,iBACnBuB,QAAS,cAACC,GAAA,EAAD,CAAQtT,QAASoS,EAAYlC,SAAU,kBAAMwC,GAAeN,MACrED,MAAM,SACNoB,eAAe,YAGvB,qBAAKpT,UAAWP,EAAQiS,WAAxB,SACI,eAACQ,GAAA,EAAD,CAAYC,QAAQ,UAApB,4BAA8C3S,EAAMiT,IAAIxD,QAAQoE,SAASC,YAE7E,cAAC,KAAD,UACI,cAACC,GAAA,EAAD,CAAMC,WAAS,EAAC7T,UAAU,SAAS8T,QAAQ,aAAaC,KAAK,OAAO1T,UAAWP,EAAQgS,WAAvF,SACKjE,UAiDjBmG,UA1Cc,SAAAC,GACd,IACIC,EADAC,EAAS,GAEb,IAAKD,EAAI,EAAGA,EAAID,EAAaN,OAAQO,IACjCC,EAAOzN,KAAK,IAEhB,OAAOyN,GAqCPC,KAAM,4GACNC,UAAW,CACPC,gBAnCR,SAAyBxB,EAAK3M,EAASkG,EAAOkI,EAAeC,GACzD,IAAIrB,EAAoBlH,IAAU6G,EAAI3O,MAAM4O,WAAV,QAC9ByB,IACArB,EAAkBL,EAAI3O,MAAMsL,aAAapD,GAAS,SAEtDkI,EAAclO,SAAQ,SAAAgG,UACX8G,EAAkBL,EAAI3O,MAAMsL,aAAapD,MAEpDyG,EAAIO,iBAAiB,SAAUF,IA4B3BsB,WAzBR,SAAoB3B,EAAKlN,GACrB,IAAIuN,EAAoBlH,IAAU6G,EAAI3O,MAAM4O,WAAV,QAC9B2B,EAAiB,KAOrB,OALIA,EADA9O,EAAQ,EACSqG,IAAUkH,EAAkBvN,EAAQ,IAEpC,GAErBuN,EAAkBwB,OAAO/O,EAAO,EAAG8O,GAC5BvB,GAiBHyB,cAdR,SAAuB9B,EAAKlN,GACxB,IAAIuN,EAAoBlH,IAAU6G,EAAI3O,MAAM4O,WAAV,QAElC,OADAI,EAAkBwB,OAAO/O,EAAO,GACzBuN,KCxJL3U,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmW,oBAAqB,CACjBhW,MAAO,OACPiW,YAAa,IAEjBC,gBAAiB,CACblW,MAAO,GACPC,OAAQ,GACRW,WAAY,EACZoR,YAAa,GACb7P,YAAatC,EAAMM,QAAQ4D,KAAKoS,SAEpCC,gBAAiB,CACbzT,OAAQ,EACR0T,WAAY,GACZC,cAAe,QA4CvB,IAUeC,GAVc,CACzBzC,UAzCJ,SAA6B9S,GACzB,IAAMC,EAAUtB,KACV6Q,EAAOxP,EAAMiT,IAAI3O,MAAM4O,WAAW,eACxC,OACI,eAACa,GAAA,EAAD,CAAM1R,GAAG,cAAc2R,WAAS,EAAC7T,UAAU,SAAS8T,QAAQ,aAAavU,WAAW,aAAac,UAAWP,EAAQ+U,oBAApH,UACI,eAACjB,GAAA,EAAD,CAAMC,WAAS,EAACZ,MAAI,EAACjT,UAAU,MAAM8T,QAAQ,aAAavU,WAAW,SAArE,UACI,qBACI0T,KAAK,OACL1S,MAAO,CAAExB,gBAAiBsQ,EAAKhD,MAAQgD,EAAKhD,MAAQxM,EAAMiT,IAAIuC,iBAAiBC,MAAMtI,sBACrF3M,UAAWP,EAAQiV,kBAEvB,eAACxC,GAAA,EAAD,CAAYC,QAAQ,QAAQS,KAAK,OAAjC,UAAyC,SAAU5D,EAAK5H,KAAO4H,EAAK5H,KAAO,aAE/E,eAAC8K,GAAA,EAAD,CAAYU,KAAK,OAAOT,QAAQ,UAAUnS,UAAWP,EAAQmV,gBAA7D,UAA+E,UAAW5F,EAAKgD,MAAQhD,EAAKgD,MAAQ,cA6B5H2B,UAxBc,SAAAC,GACd,MAAO,CACH5H,MAAO,KACP5E,KAAM,KACN4K,MAAO,OAqBX+B,KAAM,uDACNC,UAAW,CACPkB,yBAlBR,SAAkCzC,EAAKxM,GACnC,IAAMG,EAAWH,EAAMC,QAAQC,WAAWC,SACpC4F,EAAQyG,EAAI3O,MAAM8P,aAAanB,EAAI3O,MAAMsL,aAAa+F,WAAW/O,GAAU4F,MAC3E5E,EAAOnB,EAAMC,QAAQC,WAAWiB,KAChC4K,EAAQS,EAAI3O,MAAM4O,WAAV,OAA+BD,EAAI3O,MAAMsL,aAAapD,GAChEoJ,EAAoB,CACpBpJ,MAAOA,GAAgB,KACvB5E,KAAMA,GAAc,KACpB4K,MAAOA,GAAgB,MAE3BS,EAAIO,iBAAiB,cAAeoC,MCxDzB,SAASC,GAAoBF,GAAgC,IAApBG,EAAmB,uDAAd,GAAIzP,EAAU,uDAAJ,GACnE,MAAO,CACHyP,KAAMA,EACNzP,MAAOA,EACPsP,WAAYvJ,IAAUuJ,I,aCA9BI,GAAU,iBAAmB,UAC7BA,GAAS,KAAW,UACpBA,GAAU,gBAAkB,UAC5BA,GAAU,iBAAmBA,GAAS,aACtCA,GAAU,YAAcA,GAAS,QACjCA,GAAU,iBAAmB,UAC7BA,GAAS,MAAY,UACrBA,GAAS,KAAW,UACpBA,GAAS,KAAW,UAGpB,IAAMpX,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmX,6BAA8B,CAC1B/W,OAAQ,IACRC,gBAAiBL,EAAMM,QAAQC,WAAW6W,MAC1CjX,MAAO,OACP4C,QAAS,GAEbsU,eAAgB,CACZvW,UAAW,SACXT,gBAAiBL,EAAMM,QAAQC,WAAW+W,QAC1ClX,OAAQ,IACRO,QAAS,OACTC,eAAgB,SAChBC,WAAY,cAqDd0W,GAAS,I,WA5CX,aAAe,oBACXtS,KAAKuS,mBAAqB,M,+CAG9B,SAAY3T,GACR,IAAI4T,EAAUxS,KAAKyS,kBAAkB7T,GAErC,MAAgB,QAAZ4T,EACOxS,KAAK0S,YAAY1S,KAAK2S,oBAAoB/T,IAC/B,OAAX4T,EACAxS,KAAK4S,mBAAmBhU,GACxB4T,GAAWxS,KAAKuS,mBAChB3T,OADJ,I,gCAKX,SAAmBA,GAIf,OAHAA,EAAK4T,QAAUxS,KAAKuS,mBACpB3T,EAAKiU,WAAY,EACjBjU,EAAKkU,kBAAmB,EACjBlU,I,iCAGX,SAAoBA,GAChBA,EAAK4T,QAAU,MACf,IAAIO,EAAQ,EAMZ,OALAjJ,OAAOC,OAAOnL,EAAKoU,WAAWtQ,SAAQ,SAAAyI,GAElCA,EAAK,MAAY4H,EACjBA,OAEGnU,I,+BAGX,SAAkBA,GACd,MAAI,YAAaA,EACNA,EAAK4T,QAEL,U,MA+GnB,IAWeS,GAPuB,CAClCjE,UA7BJ,SAA4C9S,GACxC,IAAMC,EAAUtB,KAChB,OACI,qBAAK6B,UAAWP,EAAQ+V,6BAAxB,SACI,cAAC,IAAD,CACIrT,OAAQ,SAAAC,IAjFxB,SAAsBqQ,EAAKpQ,GAAsB,IAAhBC,EAAe,uDAAN,KACtCD,EAAKE,OAAOC,MAAK,SAAAD,GACb,IAAME,EAAMmT,GAAOI,YAAYtT,KAAKC,MAAMJ,IAC1C,GAAoB,UAAhBE,EAAI+T,QAAqB,CACzB,IAAIC,EAAe,CACf7C,aAAc,GACdjB,UAAW,GACXD,WAAY,IAGhBtF,OAAOC,OAAO5K,EAAI6T,WAAWtQ,SAAQ,SAAAyI,GAEjC,IADA,IAAI0G,EAAavJ,IAAU6G,EAAIiE,mBAC/B,MAA6BtJ,OAAOI,QAAQiB,EAAMkI,SAAlD,eAA4D,CAAC,IAAD,sBAAhDpR,EAAgD,KAAzCyG,EAAyC,KACxC,cAAVzG,IACF4P,EAAW5P,GAAOyG,MAAQuJ,GAAUvJ,IAG5CyK,EAAa7C,aAAavN,KAAKgP,GAAoBF,EAAY1G,EAAM6G,KAAM7G,EAAM5I,WAKrF,IAAI+Q,EAAkB,GACtBxJ,OAAOC,OAAO5K,EAAI6T,WAAWtQ,SAAQ,SAAAyI,GAEjC,IADA,IAAIoI,EAAa,GACjB,MAA6BzJ,OAAOI,QAAQiB,EAAMkI,SAAlD,eAA4D,CAAC,IAAD,sBAAhDpR,EAAgD,KAAzCyG,EAAyC,KACxC,cAAVzG,IACEgQ,GAAUvJ,KAAU6K,EACpBA,EAAWtB,GAAUvJ,KAAW,EAEhC6K,EAAWtB,GAAUvJ,IAAU,EAI7BA,KAAS4K,IACXA,EAAgBrB,GAAUvJ,IAAUA,IAIhDyK,EAAa9D,UAAUtM,KAAKwQ,MAMhC,IADA,IAAInE,EAAa,GACjB,MAA4BtF,OAAOI,QAAQiF,EAAIqE,SAA/C,eAAyD,CAAC,IAAD,sBAA7C1P,EAA6C,KAAvCqH,EAAuC,KACrDiE,EAAWtL,GAAQqH,EAAMkF,UAAU8C,EAAa7C,cAIpDlB,EAAU,OAAa,GACvBtF,OAAOC,OAAO5K,EAAI6T,WAAWtQ,SAAQ,SAACyI,EAAOlJ,GAGzC,IADA,IAAI8L,EAAc,GAClB,MAAoBjE,OAAOoF,KAAKiE,EAAa9D,UAAUpN,IAAvD,eAAgE,CAA3D,IAAMyG,EAAK,KACR4K,EAAgB5K,KAAUyC,EAAMsI,WAChC1F,EAAYrF,GAASyC,EAAMsI,WAAWH,EAAgB5K,IAAQyC,MAE9D4C,EAAYrF,GAAS,OAG7B0G,EAAU,OAAWrM,KAAKgL,MAE9BoF,EAAa/D,WAAaA,EAGtBpQ,GACAA,EAAOmU,QAIXO,QAAQC,IAAI,+DAWJrU,CAAapD,EAAMiT,IAAKrQ,EAAc,GAAI5C,EAAMiT,IAAI5P,WAF5D,SAKK,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACG,gDAASD,KAAT,cACI,qCAAWC,MACX,qBAAK/C,UAAWP,EAAQiW,eAAxB,SACI,2FAiBxB/B,UANc,SAAAC,GACd,OAAO,MAMPG,KAAM,mDACNC,UAAW,I,gFCpLTkD,GAAY,CACd,2BAA4BC,GAC5B,wBAAyBC,GACzB,uBAAwBC,GACxB,2BAA4BC,IAG1BC,GAAe,CACjB,WAAYC,GACZ,yDAA0DC,IAIxDtZ,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCqZ,kBAAmB,CACfhZ,gBAAiBL,EAAMM,QAAQC,WAAW6W,MAC1CjX,MAAO,oBACP4C,QAAS,EACTpC,QAAS,OACTwB,SAAU,SACVtB,WAAY,SACZD,eAAgB,cAEpB0Y,eAAgB,CACZzW,SAAU,GACV1C,MAAO,yBAkCf,IAWeoZ,GAPY,CACvBtF,UAlCJ,SAAiC9S,GAC7B,IAAMC,EAAUtB,KADoB,EAEYmD,IAAMC,SAAS6L,OAAOoF,KAAK0E,IAAW,IAFlD,mBAE7BW,EAF6B,KAEXC,EAFW,KAGpC,OACI,sBAAKjW,GAAG,WAAW7B,UAAWP,EAAQiY,kBAAtC,UACI,eAACK,GAAA,EAAD,CACIhG,MAAO8F,EACP7X,UAAWP,EAAQkY,eACnB5H,SAAU,SAAA8C,GAAMiF,EAAoBjF,EAAEE,OAAOhB,QAHjD,UAKK3E,OAAOoF,KAAK0E,IAAW1Q,KAAI,SAAAwR,GAAG,OAAI,cAACC,GAAA,EAAD,CAAoBlG,MAAOiG,EAA3B,SAC9BA,GAD6CA,MAGjD5K,OAAOoF,KAAK+E,IAAc/Q,KAAI,SAAAwR,GAAG,OAAI,cAACC,GAAA,EAAD,CAAoBlG,MAAOiG,EAA3B,SACjCA,GADgDA,SAIzD,cAAClW,EAAA,EAAD,CAAQzB,KAAK,QAAQJ,QAAS,WAEtB4X,KAAoBX,GACpB1X,EAAMiT,IAAI5P,SAASqU,GAAUW,IAE7BrY,EAAMiT,IAAI5P,SAAS0U,GAAaM,KALxC,sBAkBRlE,UANc,SAAAC,GACd,OAAO,MAMPG,KAAM,yCACNC,UAAW,IC7ET7V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC6Z,6BAA8B,CAC1BxZ,gBAAiBL,EAAMM,QAAQC,WAAW6W,MAC1CjX,MAAO,oBACP4C,QAAS,EACTpC,QAAS,OACTwB,SAAU,SACVtB,WAAY,SACZD,eAAgB,cAEpByW,eAAgB,CACZvW,UAAW,SACXT,gBAAiBL,EAAMM,QAAQC,WAAW+W,QAC1ClX,OAAQ,IACRO,QAAS,OACTC,eAAgB,SAChBC,WAAY,cA4DpB,IAWeiZ,GAPuB,CAClC7F,UA7BJ,SAA4C9S,GACxC,IAAMC,EAAUtB,KAChB,OACI,qBAAK0D,GAAG,iBAAiB7B,UAAWP,EAAQyY,6BAA5C,SACI,cAAC,IAAD,CACI/V,OAAQ,SAAAC,IAnCxB,SAAqBqQ,EAAKpQ,GACtB,IAAM+E,EAAO/E,EAAK+E,KAClB/E,EAAKE,OAAOC,MAAK,SAAAD,GACb,IAAME,EAAMC,KAAKC,MAAMJ,GACnB,iBAAkBE,GAIlBgQ,EAAI2F,uBAAuB3V,EAAIiQ,WAAW,yBAAyBzD,QAASxM,EAAIiQ,WAAW,yBAAyB2F,QAAQ,WACxH5F,EAAIO,iBAAiB,wBAAyB,CAC1CqF,OAAQjR,EACR6H,QAASxM,OAIjBgQ,EAAI5P,SAASJ,IAIbgQ,EAAI2F,uBAAuB3V,EAAK2E,GAAM,WAClCqL,EAAIO,iBAAiB,wBAAyB,CAC1CqF,OAAQjR,EACR6H,QAASxM,UAcT6V,CAAY9Y,EAAMiT,IAAKrQ,EAAc,KAF7C,SAKK,gBAAGU,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,cAAjB,OACG,gDAASD,KAAT,cACI,qCAAWC,MACX,qBAAK/C,UAAWP,EAAQiW,eAAxB,SACI,2FAiBxB/B,UANc,SAAAC,GACd,OAAO,MAMPG,KAAM,iEACNC,UAAW,I,yCCpFT7V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCka,eAAgB,CACZ7Z,gBAAiBL,EAAMM,QAAQC,WAAW6W,MAC1CjX,MAAO,oBACP4C,QAAS,EACTpC,QAAS,OACTwB,SAAU,SACVtB,WAAY,SACZD,eAAgB,cAEpBuZ,WAAY,CACR9Y,UAAW,kBAKb+Y,GAAY,CACd,kBACA,mBACA,uBACA,yBACA,yBACA,yBACA,cAIEC,GAAgB,CAClB,gBAAmB,OACnB,iBAAoB,SACpB,qBAAwB,OACxB,uBAA0B,SAC1B,uBAA0B,SAC1B,uBAA0B,SAC1B,WAAc,UAEZC,GAAe,CACjB,KAAQC,OACR,OAAUC,QAIRC,GAAc,CAChB,gBAAmB,oBACnB,iBAAoB,oBACpB,qBAAwB,qBACxB,uBAA0B,uBAC1B,uBAA0B,uBAC1B,uBAA0B,uBAC1B,WAAc,eAwClB,IAWeC,GAPS,CACpBzG,UAzCJ,SAA8B9S,GAC1B,IAAMC,EAAUtB,KADiB,EAECmD,IAAMC,SAAS/B,EAAMiT,IAAI3O,MAAMwI,UAAU2I,OAF1C,mBAE1B3I,EAF0B,KAEf0M,EAFe,KAG3BC,EAAS7L,OAAOI,QAAQlB,GAAW9F,KAAI,SAAAiI,GACzC,GAAIgK,GAAUS,SAASzK,EAAM,IACzB,OAAQ,cAAC0K,GAAA,EAAD,CACJnZ,UAAWP,EAAQ+Y,WAEnBzG,MAAOtD,EAAM,GACbuD,MAAO8G,GAAYrK,EAAM,IACzBtN,OAAO,QACPiY,KAAMV,GAAcjK,EAAM,IAC1BsB,SAAU,SAAA8C,GACN,IAAIwG,EAAWzN,IAAUU,GACzB+M,EAAS5K,EAAM,IAAMkK,GAAaD,GAAcjK,EAAM,KAAKoE,EAAEE,OAAOhB,OACpEiH,EAAaK,KARZ5K,EAAM,OAavB,OACI,sBAAK5M,GAAG,cAAc7B,UAAWP,EAAQ8Y,eAAzC,UACKU,EACD,cAACK,GAAA,EAAD,CAAYjZ,KAAK,QAAQJ,QAAS,WAC9B,IAAIoZ,EAAWzN,IAAUpM,EAAMiT,IAAI3O,MAAMwI,WACzC+M,EAASpE,MAAQ3I,EACjB9M,EAAMiT,IAAIxO,SAAS,CAAEqI,UAAW+M,IAAY,WACxC7Z,EAAMiT,IAAI8G,OAAO3U,QAAQsG,0BAJjC,SAOI,cAAC,KAAD,UAYZyI,UANc,SAAAC,GACd,OAAO,MAMPG,KAAM,6BACNC,UAAW,I,oBC5FT7V,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmb,gBAAiB,CACb9a,gBAAiBL,EAAMM,QAAQC,WAAW6W,MAC1CjX,MAAO,oBACP4C,QAAS,EACTpC,QAAS,OACTwB,SAAU,SACVtB,WAAY,SACZD,eAAgB,cAEpBwa,WAAY,CACRlZ,OAAQ,EACR9B,OAAQ,GACRO,QAAS,OACTwB,SAAU,MACVtB,WAAY,SACZD,eAAgB,eAChBT,MAAO,QAEXkb,YAAa,CACTjb,OAAQ,GACRD,MAAO,IAEXmb,eAAgB,CACZnb,MAAO,GACPC,OAAQ,IAEZmb,SAAU,CACNrZ,OAAQ,EACR7B,gBAAiBL,EAAMM,QAAQC,WAAW6W,MAC1CzJ,MAAO3N,EAAMM,QAAQ4D,KAAKoS,QAC1BvT,QAAS,GAEbyY,cAAe,CACXpb,OAAQ,GACRD,MAAO,IAEXsb,WAAY,CACRtb,MAAO,YA6Bf,SAASub,GAAava,GAClB,IAAMC,EAAUtB,KADS,EAEOmD,IAAMC,SAAS,MAFtB,mBAElByY,EAFkB,KAERC,EAFQ,KAInBC,EAAc,SAACrU,GACjBoU,EAAYD,EAAW,KAAOnU,EAAMsU,gBAGlCC,EAAOC,QAAQL,GACfnY,EAAKuY,EAAO,qBAAkBE,EAE9B1a,EAAOJ,EAAMuS,MAEbwI,EAAc5S,EAAYnB,KAAI,SAACgU,EAAYjV,GAAb,OAChC,cAACiV,EAAD,CAEIxa,UAAWP,EAAQoa,cACnB3Z,MAAO,CAAC8L,MAAMxM,EAAMwM,OACpB/L,QAAS,WACLT,EAAMib,gBAAgBlV,GACtB2U,MALC3U,MAUb,OACI,gCACI,cAAC3F,EAAD,CAAMI,UAAWP,EAAQia,YAAaxZ,MAAO,CAAE8L,MAAOxM,EAAMwM,OAAS/L,QAASia,IAC9E,cAACQ,GAAA,EAAD,CAAQ1a,UAAWP,EAAQma,SAAU/X,GAAIA,EAAIuY,KAAMA,EAAMJ,SAAUA,EAAUW,eAAa,EAA1F,SACI,cAACpH,GAAA,EAAD,UACKgH,SAmCrB,ICzHezD,GAVC,CACZ,cAAe8D,GACf,OAAUC,GACV,ODyIqB,CACrBvI,UArCJ,SAA+B9S,GAC3B,IAAMC,EAAUtB,KADkB,EAERmD,IAAMC,SAAS,WAFP,mBAE3ByK,EAF2B,KAEpB8O,EAFoB,OAGAxZ,IAAMC,SAAS,GAHf,mBAG3BwK,EAH2B,KAGhBgP,EAHgB,KAK5Bnb,EAAO+H,EAAYoE,GAEzB,OACI,sBAAKlK,GAAG,eAAe7B,UAAWP,EAAQ+Z,gBAA1C,UACI,cAACtH,GAAA,EAAD,CAAYlS,UAAWP,EAAQqa,WAAYkB,MAAM,OAAO7I,QAAQ,UAAhE,qCACA,cAACD,GAAA,EAAD,CAAYlS,UAAWP,EAAQqa,WAAYkB,MAAM,OAAO7I,QAAQ,UAAhE,4CACA,cAACD,GAAA,EAAD,CAAYlS,UAAWP,EAAQqa,WAAYkB,MAAM,OAAO7I,QAAQ,UAAhE,wCACA,cAACD,GAAA,EAAD,CAAYlS,UAAWP,EAAQqa,WAAYkB,MAAM,OAAO7I,QAAQ,UAAhE,0EACA,sBAAKnS,UAAWP,EAAQga,WAAxB,UACI,cAACM,GAAD,CAAchI,MAAOnS,EAAMoM,MAAOA,EAAOyO,gBAAiBM,IAC1D,cAACE,GAAA,EAAD,CAAOjb,UAAWP,EAAQka,eAAgB5H,MAAO/F,EAAOoN,KAAK,QAAQrJ,SAAU,SAAA8C,GAAC,OAAIiI,EAASjI,EAAEE,OAAOhB,aAE1G,cAACjQ,EAAA,EAAD,CAAQ7B,QAAS,WACb,IAAM2N,EAASpO,EAAMiT,IAAI8G,OAAO3U,QAAQoG,WAAWkQ,YAAYC,YAC/D3b,EAAMiT,IAAI8G,OAAO3U,QAAQ2G,UAAUQ,EAAWC,EAAO4B,EAAO/B,IAAK+B,EAAO9B,IAAK,sBAFjF,qBAqBR6H,UAXc,SAAAC,GACd,IACIC,EADAC,EAAS,GAEb,IAAKD,EAAI,EAAGA,EAAID,EAAaN,OAAQO,IACjCC,EAAOzN,KAAK,IAEhB,OAAOyN,GAMPC,KAAM,yCACNC,UAAW,CACPoH,oBAvGR,SAA6B3I,EAAK4I,GAC9B5I,EAAI8G,OAAO3U,QAAQ6G,oBAuGf2I,WApGR,SAAoB3B,EAAKlN,GACrB,IAAI+V,EAAoB1P,IAAU6G,EAAI3O,MAAM4O,WAAV,QAC9B6I,EAAiB,KAOrB,OALIA,EADAhW,EAAQ,EACSqG,IAAU0P,EAAkB/V,EAAQ,IAEpC,GAErB+V,EAAkBhH,OAAO/O,EAAO,EAAGgW,GAC5BD,GA4FH/G,cAzFR,SAAuB9B,EAAKlN,GACxB,IAAI+V,EAAoB1P,IAAU6G,EAAI3O,MAAM4O,WAAV,QAElC,OADA4I,EAAkBhH,OAAO/O,EAAO,GACzB+V,KCzDP,SAAYE,GACZ,MAASC,GACT,yBAA0BC,GAC1B,wBAAyBC,I,kFCLvBxd,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCud,oBAAqB,CACjBrd,SAAU,WACVgS,MAAO,EACPsL,OAAQ,GACRtb,OAAQ,EACRub,SAAU,IACVtd,MAAO,MACPud,UAAW,IACXtd,OAAQ,MACRO,QAAS,OACTC,eAAgB,aAChBuB,SAAU,SACVtB,WAAY,UACZkC,QAAS,EACT1B,UAAW,sBACXsc,eAAgB,QAChBvb,kBAAmB,QACnBwb,gBAAiB,QACjBtb,YAAatC,EAAMM,QAAQiC,OAC3BC,gBAAiBxC,EAAMM,QAAQkC,gBAAgBC,KAC/CC,kBAAmB1C,EAAMM,QAAQqC,aAErCkb,mBAAoB,CAChBC,aAAc,GACd1H,YAAa,IAEjB2H,iBAAkB,CACdvH,WAAY,EACZC,cAAe,GAEnBuH,iBAAkB,CACdjb,QAAS,GAEbkb,cAAe,CACXld,WAAY,OAIL,SAASmd,GAAoB/c,GAIxC,IAHA,IAAMC,EAAUtB,KAD+B,EAEjBmD,IAAMC,UAAS,GAFE,mBAExCvC,EAFwC,KAE/BwC,EAF+B,KAG3Cgb,EAAiB,GACrB,MAA4BpP,OAAOI,QAAQsJ,IAA3C,eAAqD,CAAC,IAAD,sBAAzC1P,EAAyC,KAAnC2K,EAAmC,KAC3C0K,EAAS1K,EAAMO,UACrBkK,EAAenW,KACX,eAACqW,GAAA,EAAD,CAAWC,iBAAe,EAAYC,QAAM,EAA5C,UACI,eAACC,GAAA,EAAD,CAAkBC,WAAY,cAAC,KAAD,IAAoB9c,UAAWP,EAAQ2c,iBAAkBW,gBAAiB,CAAE1c,KAAM,SAAhH,UACI,cAAC6R,GAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6B/K,IAC7B,cAAC4V,GAAA,EAAD,CACIC,MAAOlL,EAAMgC,KADjB,SAGI,qBAAK/T,UAAWP,EAAQ6c,cAAxB,SACI,cAAC,KAAD,CAAiBpb,SAAS,iBAItC,cAACgc,GAAA,EAAD,CAAkBld,UAAWP,EAAQ4c,iBAArC,SACI,cAACI,EAAD,CAAQhK,IAAKjT,EAAMiT,UAZKrL,IAiBxC,OACI,cAAC3F,EAAA,EAAD,CAAO9B,UAAU,OAAO+B,GAAI1C,EAAS2C,eAAe,EAAOC,cAAc,EAAzE,SACI,sBAAK5B,UAAWP,EAAQmc,oBAAqB/Z,GAAG,cAAhD,UACI,cAAC,KAAD,UACI,qBAAK7B,UAAWP,EAAQyc,mBAAxB,SACKM,MAGT,cAAC,EAAD,CAAe7c,UAAU,QAAQQ,IAAK,MAAOC,MAAO,EAAGP,QAASb,EAASiB,QAAS,kBAAMuB,GAAYxC,W,mECnF9Gb,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8e,uBAAwB,CACpB5e,SAAU,WACV4B,KAAM,GACNiB,QAAS,EACTb,OAAQ,EACRb,UAAW,cAEf0d,cAAe,CACXhc,QAAS,EACTb,OAAQ,EACRyL,MAAO3N,EAAMM,QAAQ4D,KAAK8a,eAInB,SAASC,GAAkB9d,GACtC,IAAMC,EAAUtB,KAChB,OACI,8BACI,qBAAK6B,UAAWP,EAAQ0d,uBAAwBjd,MAAO,CAACE,KAAOZ,EAAM8M,UAAUiR,sBAAsB,EAAI,IAAzG,SACI,cAACjE,GAAA,EAAD,CAAYjZ,KAAK,QAAQL,UAAWP,EAAQ2d,cAAend,QAAS,WAAQT,EAAMge,SAAShe,EAAM+F,MAAQ,IAAzG,SAEI,cAAC,KAAD,UCjBpB,IAAMpH,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCof,eAAgB,CACZlf,SAAU,WACV4B,IAAK,GACLI,OAAQ,EACRb,UAAW,cAEfge,YAAa,CACT1R,MAAO3N,EAAMM,QAAQ4D,KAAKoS,QAC1BvT,QAAS,GAEbuc,YAAa,CACTpf,SAAU,WACV4B,KAAM,GACNC,KAAM,MACNjB,UAAW,SACXye,aAAc,WACdC,SAAU,SACVC,WAAY,SACZ9R,MAAO3N,EAAMM,QAAQ4D,KAAKoS,aAInB,SAASoJ,GAAeve,GACnC,IAAMC,EAAUtB,KACVgG,EAAO3E,EAAMwe,SAAW,cAAC,KAAD,IAA4B,cAAC,KAAD,IAC1D,OACI,sBAAKhe,UAAWP,EAAQge,eAAgBvd,MAAO,CAACE,MAAOZ,EAAM+F,MAAM,GAAG/F,EAAM8M,UAAUiR,uBAAtF,UAEI,cAACrL,GAAA,EAAD,CACIlS,UAAWP,EAAQke,YACnBxL,QAAQ,QACRjS,MAAO,CACH1B,MAAMgB,EAAM8M,UAAU2R,yBACtB7e,YAAYI,EAAM8M,UAAU2R,yBAAyB,GAL7D,SAQCze,EAAMwS,QAEP,cAACsL,GAAD,CAAmBhR,UAAW9M,EAAM8M,UAAWkR,SAAUhe,EAAMge,SAAUjY,MAAO/F,EAAM+F,QACtF,cAAC+T,GAAA,EAAD,CAAYtZ,UAAWP,EAAQie,YAAard,KAAK,QAAQJ,QAAS,WAAOT,EAAM0e,kBAAkB1e,EAAM+F,QAAvG,SACKpB,OCvCjB,IAAMhG,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC8f,qBAAsB,CAClB5f,SAAU,WACVC,MAAO,OACPC,OAAQ,GACRod,OAAQ,EACRgC,SAAU,SACVtd,OAAQ,EACRyb,eAAgB,QAChBrb,YAAatC,EAAMM,QAAQiC,OAC3BC,gBAAiBxC,EAAMM,QAAQkC,gBAAgBC,KAC/CC,kBAAmB1C,EAAMM,QAAQqC,aAErCod,aAAc,CACV7f,SAAU,WACV4B,IAAK,GACLC,KAAM,EACN3B,OAAQ,EACRC,gBAAiBL,EAAMM,QAAQ4D,KAAKoS,SAExC0J,4BAA6B,CACzBrf,QAAS,WACTP,OAAQ,QAEZ6f,2BAA4B,CACxB/f,SAAU,WACV4B,IAAK,EACLC,KAAM,OAIC,SAASme,GAAqB/e,GACzC,IAAMC,EAAUtB,KACVoP,EAAU/N,EAAMoU,aAAapN,KAAI,SAACiI,EAAOlJ,GAAR,OACnC,cAACwY,GAAD,CAA4BxY,MAAOA,EAAOyM,MAAOvD,EAAM6G,KAAM0I,SAAUxe,EAAM4P,cAAgB7J,EAAO2Y,kBAAmB1e,EAAM0e,kBAAmBV,SAAUhe,EAAMge,SAAUlR,UAAW9M,EAAM8M,WAAtK/G,MAHuB,ECvCrC,WAA0B,IAAD,EACZjE,IAAMC,SAAS,CAAC,EAAG,IADP,mBAC7BlB,EAD6B,KACvBme,EADuB,KAUpC,OARAld,IAAMmd,iBAAgB,WAClB,SAASC,IACLF,EAAQ,CAACzc,OAAO4c,WAAY5c,OAAO6c,cAIvC,OAFA7c,OAAOiF,iBAAiB,SAAU0X,GAClCA,IACO,kBAAM3c,OAAOmF,oBAAoB,SAAUwX,MACnD,IACIre,EDkCiBwe,GALwB,mBAKzCrgB,EALyC,KAM1CsgB,GAN0C,KAM7BtX,KAAKuX,IAAIvgB,GAAQgB,EAAMoU,aAAaN,OAAS,GAAK9T,EAAM8M,UAAUiR,wBACrF,OACI,qBAAKvd,UAAWP,EAAQ0e,qBAAsBtc,GAAG,eAAjD,SACI,cAAC,cAAD,CAAY7B,UAAWP,EAAQ4e,4BAA/B,SACI,sBAAKre,UAAWP,EAAQ4e,4BAAxB,UACI,qBAAKre,UAAWP,EAAQ2e,aAAcle,MAAO,CAAE1B,MAAOsgB,KACtD,qBAAK9e,UAAWP,EAAQ6e,2BAA4Bpe,MAAO,CAAE1B,MAAOsgB,GAApE,SACKvR,WE7CzB,IAAMpP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC2gB,eAAgB,CACZzgB,SAAU,WACV6B,KAAM,EACNyb,OAAQ,GACRC,SAAU,IACVtd,MAAO,MACPud,UAAW,IACXtd,OAAQ,MACR8B,OAAQ,EACRvB,QAAS,OACTwB,SAAU,SACVtB,WAAY,UACZkC,QAAS,EACTV,iBAAkB,QAClBsb,eAAgB,QAChBrb,YAAatC,EAAMM,QAAQiC,OAC3BC,gBAAiBxC,EAAMM,QAAQkC,gBAAgBC,KAC/CC,kBAAmB1C,EAAMM,QAAQqC,aAErCie,SAAU,CACNjgB,QAAS,OACTwB,SAAU,MACVtB,WAAY,SACZD,eAAgB,gBAChB4B,gBAAiBxC,EAAMM,QAAQkC,gBAAgBC,MAEnDoe,kBAAmB,CACflgB,QAAS,OACTwB,SAAU,SACVtB,WAAY,SACZD,eAAgB,iBAEpBkgB,aAAc,CACV9f,UAAW,EACX+f,SAAU,EACVC,OAAQ,OACR3gB,gBAAiBL,EAAMM,QAAQC,WAAW6W,MAC1CzJ,MAAO3N,EAAMM,QAAQ4D,KAAKoS,SAE9B2K,YAAa,CACTpe,SAAU,GACVC,OAAQ,GAEZoe,UAAW,CACP/gB,MAAO,0BACP2C,OAAQ,QAIhB,SAASqe,GAAuBhgB,GAC5B,IAAMC,EAAUtB,KADmB,EAELmD,IAAMC,UAAS,GAFV,mBAE5BvC,EAF4B,KAEnBwC,EAFmB,KAGnC,OACI,cAACC,EAAA,EAAD,CAAO9B,UAAU,QAAQ+B,GAAI1C,EAAS2C,eAAe,EAAOC,cAAc,EAA1E,SACI,sBAAK5B,UAAWP,EAAQuf,eAAgBnd,GAAG,iBAA3C,UACI,sBAAK7B,UAAWP,EAAQwf,SAAxB,UACI,cAAC9F,GAAA,EAAD,CAAW9Y,KAAK,QAAQ2R,MAAM,OAAO7Q,OAAO,QAAQ4Q,MAAOvS,EAAM8V,KAAMvF,SAAU,SAAA8C,GAAOrT,EAAMigB,gBAAgB5M,EAAEE,OAAOhB,QAAU/R,UAAWP,EAAQ8f,YACpJ,sBAAKvf,UAAWP,EAAQyf,kBAAxB,UACI,cAACpd,EAAA,EAAD,CAAQqQ,QAAQ,YAAY9R,KAAK,QAAQ2L,MAAM,UAAU/L,QAAS,WAAQT,EAAMkgB,cAAiB1f,UAAWP,EAAQ6f,YAApH,mBACA,cAACxd,EAAA,EAAD,CAAQqQ,QAAQ,YAAY9R,KAAK,QAAQ2L,MAAM,YAAY/L,QAAS,WAAQT,EAAMmgB,YAAYngB,EAAM4P,cAAiBwQ,SAAUpgB,EAAMqgB,aAAc7f,UAAWP,EAAQ6f,YAAtK,0BAIR,0BAAUtf,UAAWP,EAAQ0f,aAAcpN,MAAOvS,EAAMqG,MAAOkK,SAAU,SAAA8C,GAAOrT,EAAMsgB,YAAYjN,EAAEE,OAAOhB,QAAUgO,UAAU,SAC/H,cAAC,EAAD,CAAepgB,UAAU,OAAOQ,IAAK,MAAOC,KAAM,mBAAoBP,QAASb,EAASiB,QAAS,kBAAMuB,GAAYxC,WAMpHsC,WAAM2B,KAAKuc,ICjFX,OAA0B,0CCA1B,OAA0B,wCCqC1BlT,GAjCG,CACd0T,SAAU,CACNrhB,QAAS,CACLya,KAAM,OACNiE,UAAW,CACPvc,KAAM,UACNjC,MAAO,UACPohB,KAAM,WAEVrf,OAAQ,UACRI,YAAY,OAAD,OAASkf,GAAT,QACXthB,WAAY,CACRC,MAAO,WAEXgC,gBAAiB,CACbC,KAAK,OAAD,OAASqf,GAAT,QAIhBlL,MAAO,CACH1I,gBAAiB,UACjBE,iBAAkB,GAClBE,qBAAsB,UACtBG,uBAAwB,GACxBD,uBAAwB,GACxBE,uBAAwB,GACxBwQ,sBAAuB,IACvBU,yBAA0B,IAC1BxQ,WAAY,K,UC9BL,SAAS2S,GAAiBC,GACrC,IAAIvM,EAAS,GAMb,OALAuM,EAAQhN,SAASrN,SAAQ,SAAAsa,GACrBxM,EAAOwM,EAAOna,WAAWC,UAAY,CACjC4F,MAAO,SAGR8H,E,4BCkEIyM,GAzED,CACV,CACIxN,OAAQ,OACR3N,QACA,eAAC,IAAMK,SAAP,WACI,gHACA,uBACA,gGACA,uBACA,mDACA,+IACA,2IACA,uBACA,gLACA,uBACA,wDAA0B,mBAAG+a,KAAK,sFAAsFzN,OAAO,SAArG,uCAC1B,uBACA,gFACA,4BAAG,mBAAGyN,KAAK,oDAAR,yBAEPC,UAAW,UAEf,CACI1N,OAAQ,YACR3N,QAAS,mGAEb,CACI2N,OAAQ,WACR3N,QAAS,sGAEb,CACI2N,OAAQ,OACR3N,QAAS,oHAEb,CACI2N,OAAQ,0BACR3N,QAAS,8EAEb,CACI2N,OAAQ,gBACR3N,QAAS,iMAEb,CACI2N,OAAQ,kBACR3N,QAAS,uLAEb,CACI2N,OAAQ,eACR3N,QAAS,2EAEb,CACI2N,OAAQ,eACR3N,QAAS,sJAEb,CACI2N,OAAQ,kBACR3N,QAAS,mJAEb,CACI2N,OAAQ,QACR3N,QAAS,2DAEb,CACI2N,OAAQ,OACR3N,QAAS,eAAC,IAAMK,SAAP,WACL,iDACA,4KACA,uIACA,kEAEJgb,UAAW,W,UC/BnBC,KAAQC,WAAW,kBACnBD,KAAQE,SAAS7e,OAAOC,SAAS6e,SAAW9e,OAAOC,SAAS8e,QAE5D,IAAMziB,GAAQ0iB,YAAezU,GAAU0T,UAKjCgB,G,kDACJ,WAAYxhB,GAAQ,IAAD,uBACjB,cAAMA,IAGDyP,QAAUgS,GACf,EAAK5I,OAAS,WACd,EAAKrD,iBAAmB1I,GAGxB,EAAKoK,kBAAoB0J,GAAiB,EAAKnR,SAC/C,EAAKiS,oBAAsB,CACzB7L,GAAoB,EAAKqB,kBAAmB,iBAAkB,YAC9DrB,GAAoB,EAAKqB,kBAAmB,iBAAkB,kBAGhE,EAAKI,QAAUA,GAIf,IADA,IAAIpE,EAAa,GACjB,MAA4BtF,OAAOI,QAAQ,EAAKsJ,SAAhD,eAA0D,CAAC,IAAD,sBAA9C1P,EAA8C,KAAxCqH,EAAwC,KACxDiE,EAAWtL,GAAQqH,EAAMkF,UAAU,EAAKuN,qBAG1C,IACIrN,EADAlB,EAAY,GAEhB,IAAKkB,EAAI,EAAGA,EAAI,EAAKqN,oBAAoB5N,OAAQO,IAC/ClB,EAAUtM,KAAK,IA1BA,OA8BjB,EAAKvC,MAAQ,CACXwI,UAAW,EAAK0I,iBAChBpB,aAAc,EAAKsN,oBACnBxO,WAAYA,EACZC,UAAWA,EACXvD,YAAa,EACblD,gBAAgB,EAChB4E,SAAS,EACTqQ,QAAQ,EACRjU,SAAS,EACTmL,OAAQ,EAAKA,QAIf,EAAK+I,YAAc9f,IAAM0C,UAAU,MACnC,EAAKuV,OAASjY,IAAM0C,UAAU,MAG9B,EAAKqd,SAAW,EAAKA,SAAS3d,KAAd,gBAChB,EAAK6C,cAAgB,EAAKA,cAAc7C,KAAnB,gBACrB,EAAKwa,kBAAoB,EAAKA,kBAAkBxa,KAAvB,gBACzB,EAAK8Z,SAAW,EAAKA,SAAS9Z,KAAd,gBAChB,EAAK+b,gBAAkB,EAAKA,gBAAgB/b,KAArB,gBACvB,EAAKoc,YAAc,EAAKA,YAAYpc,KAAjB,gBACnB,EAAKic,YAAc,EAAKA,YAAYjc,KAAjB,gBACnB,EAAKsP,iBAAmB,EAAKA,iBAAiBtP,KAAtB,gBACxB,EAAK4d,sBAAwB,EAAKA,sBAAsB5d,KAA3B,gBAC7B,EAAKgc,WAAa,EAAKA,WAAWhc,KAAhB,gBAClB,EAAKb,SAAW,EAAKA,SAASa,KAAd,gBAChB,EAAK4C,qBAAuB,EAAKA,qBAAqB5C,KAA1B,gBAC5B,EAAKyN,cAAgB,EAAKA,cAAczN,KAAnB,gBACrB,EAAKyJ,iBAAmB,EAAKA,iBAAiBzJ,KAAtB,gBACxB,EAAKyI,uBAAyB,EAAKA,uBAAuBzI,KAA5B,gBAC9B,EAAK0I,wBAA0B,EAAKA,wBAAwB1I,KAA7B,gBAC/B,EAAKxB,KAAO,EAAKA,KAAKwB,KAAV,gBACZ,EAAK2I,sBAAwB,EAAKA,sBAAsB3I,KAA3B,gBAC7B,EAAKwN,cAAgB,EAAKA,cAAcxN,KAAnB,gBACrB,EAAK0U,uBAAyB,EAAKA,uBAAuB1U,KAA5B,gBAC9B,EAAK6d,cAAgB,EAAKA,cAAc7d,KAAnB,gBACrB,EAAK8d,sBAAwB,EAAKA,sBAAsB9d,KAA3B,gBAC7B,EAAK+H,iBAAmB,EAAKA,iBAAiB/H,KAAtB,gBACxB,EAAKoH,cAAgB,EAAKA,cAAcpH,KAAnB,gBACrB,EAAK+d,wBAA0B,EAAKA,wBAAwB/d,KAA7B,gBAxEd,E,iDA4EnB,WACE,OAAOJ,KAAKQ,MAAM4O,WAAX,OAAgCpP,KAAKQ,MAAMsL,e,8BAIpD,SAAiBvE,GACf,IAAIc,EAAcC,IAAUtI,KAAKQ,MAAM4O,WAAX,QAC5B/G,EAAYrI,KAAKQ,MAAMsL,aAAevE,EACtCvH,KAAK0P,iBAAiB,SAAUrH,K,2BAIlC,SAAcqM,EAAK0J,GAAO,IAAD,OACnB5N,EAAS,GASb,OARA1G,OAAOI,QAAQlK,KAAKwT,SAAS9Q,SAAQ,SAAAyI,GACnC,GAAIuJ,KAAOvJ,EAAM,GAAGuF,UAAW,CAAC,IAAD,EACvB2N,GAAM,EAAAlT,EAAM,GAAGuF,WAAUgE,GAAnB,SAAwB,GAAxB,mBAAiC0J,KACzCC,IACF7N,EAAOrF,EAAM,IAAMkT,OAIlB7N,I,oCAIT,SAAuB7E,EAASoJ,GAA0B,IAAlBpM,EAAiB,uDAAN,KAEjD3I,KAAK2L,QAAUA,EACf3L,KAAK+U,OAASA,EAGd/U,KAAKoT,kBAAoB0J,GAAiB9c,KAAK2L,SAC/C3L,KAAK4d,oBAAsB,CACzB7L,GAAoB/R,KAAKoT,kBAAmB,iBAAkB,YAC9DrB,GAAoB/R,KAAKoT,kBAAmB,iBAAkB,kBAGhEpT,KAAKwT,QAAUA,GAIf,IADA,IAAIpE,EAAa,GACjB,MAA4BtF,OAAOI,QAAQlK,KAAKwT,SAAhD,eAA0D,CAAC,IAAD,sBAA9C1P,EAA8C,KAAxCqH,EAAwC,KACxDiE,EAAWtL,GAAQqH,EAAMkF,UAAUrQ,KAAK4d,qBAG1C,IACIrN,EADAlB,EAAY,GAEhB,IAAKkB,EAAI,EAAGA,EAAIvQ,KAAK4d,oBAAoB5N,OAAQO,IAC/ClB,EAAUtM,KAAK,IAIjB/C,KAAKW,SAAS,CAEZ2P,aAActQ,KAAK4d,oBACnBxO,WAAYA,EACZC,UAAWA,EACXvD,YAAa,EACblD,gBAAgB,EAChB4E,SAAS,EACTqQ,QAAQ,EACRjU,SAAS,EACTmL,OAAQ/U,KAAK+U,SACZ,WACGpM,GACFA,S,2BAMN,SAAc2V,GAA4B,IAAlB3V,EAAiB,uDAAN,KACjC3I,KAAKW,SAAS,CAAEiJ,QAAS0U,IAAY,WAC/B3V,GACFA,S,oCAKN,SAAuBhG,GAErB3C,KAAKie,cAAc,2BAA4B,CAACtb,M,qCAGlD,SAAwBA,GAEtB3C,KAAKie,cAAc,4BAA6B,CAACtb,M,8BAInD,SAAiB+R,EAAKhJ,GAAsB,IAAhB/C,EAAe,uDAAN,KAC/BN,EAAcC,IAAUtI,KAAKQ,MAAM4O,YACvC/G,EAAYqM,GAAOhJ,EACnB1L,KAAKW,SAAS,CAAEyO,WAAY/G,IAAe,WACrCM,GACFA,S,mCAMN,SAAsB4V,GAEpB,IAF8C,IAAhB5V,EAAe,uDAAN,KACnCN,EAAcC,IAAUtI,KAAKQ,MAAM4O,YACvC,MAA0BtF,OAAOI,QAAQqU,GAAzC,eAAoD,CAAC,IAAD,sBAAxC7J,EAAwC,KAAnChJ,EAAmC,KAClDrD,EAAYqM,GAAOhJ,EAErB1L,KAAKW,SAAS,CAAEyO,WAAY/G,IAAe,WACrCM,GACFA,S,kCAMN,SAAqB2V,GAA4B,IAAlB3V,EAAiB,uDAAN,KACxC3I,KAAKW,SAAS,CAAEiI,eAAgB0V,IAAY,WACtC3V,GACFA,S,2BAMN,SAAc2V,GAA4B,IAAlB3V,EAAiB,uDAAN,KACjC3I,KAAKW,SAAS,CAAE6M,QAAS8Q,IAAY,WAC/B3V,GACFA,S,sBAMN,WACE,OAAO3I,KAAKQ,MAAMgN,QAAU,KAAOxN,KAAK8d,YAAYxc,QAAQd,MAAMkI,Q,8BAIpE,SAAiBA,GACf1I,KAAK8d,YAAYxc,QAAQX,SAAS,CAAE+H,MAAOA,M,sBAI7C,SAASzG,GAAQ,IAAD,OACVoG,EAAcC,IAAUtI,KAAKQ,MAAM8P,cACnCkO,EAAmBlW,IAAUtI,KAAKQ,MAAM6O,WACxCoP,EAAgB,KAChBC,EAAgB,KAChBzc,EAAQ,GACVwc,EAAgB1M,GAAoB1J,EAAYpG,EAAQ,GAAG4P,YAC3D6M,EAAgBpW,IAAUkW,EAAiBvc,EAAQ,MAEnDwc,EAAgB1M,GAAoB/R,KAAKoT,mBACzCsL,EAAgB,IAElBrW,EAAY2I,OAAO/O,EAAO,EAAGwc,GAC7BD,EAAiBxN,OAAO/O,EAAO,EAAGyc,GAClC1e,KAAKW,SAAS,CAAE2P,aAAcjI,EAAagH,UAAWmP,IAAoB,WAExE,IAAMhO,EAAS,EAAKyN,cAAc,aAAc,CAAChc,IACjD,EAAK+b,sBAAsBxN,GAAQ,WAAO,EAAKoK,kBAAkB3Y,W,yBAKrE,SAAYA,GAAQ,IAAD,OACboG,EAAcC,IAAUtI,KAAKQ,MAAM8P,cACnCkO,EAAmBlW,IAAUtI,KAAKQ,MAAM6O,WAG5C,GAFAhH,EAAY2I,OAAO/O,EAAO,GAC1Buc,EAAiBxN,OAAO/O,EAAO,GAC3BA,IAAUjC,KAAKQ,MAAM8P,aAAaN,OAAS,EAAG,CAEhD,IAAI+H,EAAW9V,EAAQ,EAEvBjC,KAAK4a,kBAAkB7C,GAAU,WAC/B,EAAKpX,SAAS,CAAE2P,aAAcjI,EAAagH,UAAWmP,IAAoB,WACxE,IAAMhO,EAAS,EAAKyN,cAAc,gBAAiB,CAAChc,IACpD,EAAK+b,sBAAsBxN,cAK/BxQ,KAAKW,SAAS,CAAE2P,aAAcjI,EAAagH,UAAWmP,IAAoB,WACxE,IAAMhO,EAAS,EAAKyN,cAAc,gBAAiB,CAAChc,IACpD,EAAK+b,sBAAsBxN,GAAQ,WACjC,EAAKyF,OAAO3U,QAAQsG,4BAM1B5H,KAAKie,cAAc,gBAAiB,CAAChc,M,6BAIvC,SAAgB+P,GACd,IAAI3J,EAAcC,IAAUtI,KAAKQ,MAAM8P,cACvCjI,EAAYrI,KAAKQ,MAAMsL,aAAakG,KAAOA,EAC3ChS,KAAKW,SAAS,CAAE2P,aAAcjI,IAG9BrI,KAAKie,cAAc,oBAAqB,CAACjM,M,yBAI3C,SAAYzP,GACV,IAAI8F,EAAcC,IAAUtI,KAAKQ,MAAM8P,cACvCjI,EAAYrI,KAAKQ,MAAMsL,aAAavJ,MAAQA,EAC5CvC,KAAKW,SAAS,CAAE2P,aAAcjI,IAG9BrI,KAAKie,cAAc,gBAAiB,CAAC1b,M,wBAIvC,WACE,IAAI8F,EAAcC,IAAUtI,KAAKQ,MAAM8P,cACvCjI,EAAYrI,KAAKQ,MAAMsL,aAAavJ,MAAQ,GAC5C8F,EAAYrI,KAAKQ,MAAMsL,aAAakG,KAAO,GAC3ChS,KAAKW,SAAS,CAAE2P,aAAcjI,M,+BAIhC,SAAkB0P,GAA4B,IAAD,OAAjBpP,EAAiB,uDAAN,KACrC3I,KAAKW,SACH,CAAEmL,YAAaiM,IACf,WACE,EAAK9B,OAAO3U,QAAQsG,sBACpB,EAAKqW,cAAc,sBAAuB,CAAClG,IACvCpP,GACFA,S,2BAMR,SAAcnG,GAA2B,IAAD,OAAjBmG,EAAiB,uDAAN,KAC1BD,EAAQ1I,KAAK+d,WAGf1V,EAAcC,IAAUtI,KAAKQ,MAAM8P,cACnCkO,EAAmBlW,IAAUtI,KAAKQ,MAAM6O,WACxCuB,EAAgB,GAChBC,GAAa,EAEjBrO,EAAQE,SAAQ,SAAAT,GACd,IAAM0c,EAAgBtW,EAAY,EAAK7H,MAAMsL,aAAa+F,WAAW5P,GAAOyG,MAE5EL,EAAY,EAAK7H,MAAMsL,aAAa+F,WAAW5P,GAAOyG,MAAQA,EAG1DiW,IAAkBjW,IAEhBiW,IACFH,EAAiB,EAAKhe,MAAMsL,aAAa6S,IAAkB,EACK,IAA5DH,EAAiB,EAAKhe,MAAMsL,aAAa6S,YAEpCH,EAAiB,EAAKhe,MAAMsL,aAAa6S,GAChD/N,EAAc7N,KAAK4b,KAKnBjW,IACEA,KAAS8V,EAAiB,EAAKhe,MAAMsL,aACvC0S,EAAiB,EAAKhe,MAAMsL,aAAapD,IAAU,GAEnD8V,EAAiB,EAAKhe,MAAMsL,aAAapD,GAAS,EAClDmI,GAAa,QAOrB7Q,KAAKW,SAAS,CAAE2P,aAAcjI,EAAagH,UAAWmP,IACpD,WACE,EAAKvI,OAAO3U,QAAQ0G,0BAA0BxF,GAC1CmG,GACFA,IAIF,EAAKsV,cAAc,kBAAmB,CAACzb,EAASkG,EAAOkI,EAAeC,S,kBAK5E,YC3Za,SAAsB1R,GACjC,IAAMyf,EAAO,IAAIC,KAAK,CAACzf,KAAK0f,UAAU3f,IAAO,CAAC2W,KAAM,mCACpDiJ,kBAAOH,EAAM,aD0ZbI,CAAa,CACX1O,aAActQ,KAAKQ,MAAM8P,aACzBjB,UAAWrP,KAAKQ,MAAM6O,UACtBD,WAAYpP,KAAKQ,MAAM4O,e,qCAK3B,WAGE,IAHwC,IAAlBzG,EAAiB,uDAAN,KAC7BsW,EAAoB3W,IAAUtI,KAAKQ,MAAM4O,YAE7C,MAA4BtF,OAAOI,QAAQlK,KAAKwT,SAAhD,eAA0D,CAAC,IAAD,sBAA9C1P,EAA8C,KAAxCqH,EAAwC,KAClDrH,KAAQmb,IACZA,EAAkBnb,GAAQqH,EAAMkF,UAAUrQ,KAAKQ,MAAM8P,eAGzDtQ,KAAKW,SAAS,CAAEyO,WAAY6P,IAAqB,WAC3CtW,GACFA,S,sBAMN,SAASuW,GAAW,IAAD,OACjBlf,KAAKW,SAAS,CAAE2P,aAAc4O,EAAS5O,aAAcjB,UAAW6P,EAAS7P,UAAWD,WAAY8P,EAAS9P,aAAc,WACrH,EAAK+O,yBAAwB,kBAAM,EAAKvD,kBAAkB,SAI5D5a,KAAKie,cAAc,aAAc,CAACiB,M,mCAGpC,SAAsBjd,GAEpB,OAAOjC,KAAKQ,MAAM8P,aAAatQ,KAAKQ,MAAMsL,aAAa+F,WAAW5P,GAAOyG,Q,mCAI3E,SAAsBgD,GACHA,EAAToK,OACKqJ,KAAOC,UAAYpf,KAAKQ,MAAMqd,QACzC7d,KAAKW,SAAS,CAAEkd,QAAQ,M,oBAI5B,WAAU,IAAD,OACa7d,KAAK9D,MAAjBC,QACR,OACE,cAACkjB,EAAA,EAAD,CAAetkB,MAAOA,GAAtB,SACE,sBAAK2B,UAAU,MAAf,UACE,cAAC,KAAD,CACEiM,SAAU3I,KAAKke,sBACfjB,MAAOA,GACPqC,YAAU,EACVC,qBAAmB,EACnBC,mBAAiB,EACjBC,cAAY,EACZC,gBAAc,EACdC,IAAK3f,KAAKQ,MAAMqd,OAChB+B,OAAQ,CACNC,YAAa,CACXnkB,QAAS,QAEXokB,WAAY,CACV1kB,gBAAiBL,GAAMM,QAAQ0e,UAAUvc,KACzCkL,MAAO3N,GAAMM,QAAQ4D,KAAKoS,QAC1BzT,SAAU,OAIhB,cAAC,EAAD,CACEgB,KAAMoB,KAAKpB,KACXW,SAAUS,KAAKT,SACfG,SAAU,WAAQ,EAAKiB,SAAS,CAAEkd,QAAQ,OAE5C,cAAC,GAAD,CACEjV,eAAgB5I,KAAKQ,MAAMoI,eAC3B5F,qBAAsBhD,KAAKgD,qBAC3BwK,QAASxN,KAAKQ,MAAMgN,QACpBK,cAAe7N,KAAK6N,cACpBjE,QAAS5J,KAAKQ,MAAMoJ,QACpBgE,cAAe5N,KAAK4N,gBAEtB,cAACqL,GAAD,CAAqB9J,IAAKnP,OAC1B,cAACib,GAAD,CACEL,kBAAmB5a,KAAK4a,kBACxB9O,YAAa9L,KAAKQ,MAAMsL,YACxBwE,aAActQ,KAAKQ,MAAM8P,aACzB4J,SAAUla,KAAKka,SACflR,UAAWhJ,KAAKQ,MAAMwI,UAAU2I,QAElC,cAAC,GAAD,CACEK,KAAMhS,KAAKQ,MAAM8P,aAAatQ,KAAKQ,MAAMsL,aAAakG,KACtDzP,MAAOvC,KAAKQ,MAAM8P,aAAatQ,KAAKQ,MAAMsL,aAAavJ,MACvD4Z,gBAAiBnc,KAAKmc,gBACtBK,YAAaxc,KAAKwc,YAClBH,YAAarc,KAAKqc,YAClBvQ,YAAa9L,KAAKQ,MAAMsL,YACxBsQ,WAAYpc,KAAKoc,WACjBG,aAAiD,IAAnCvc,KAAKQ,MAAM8P,aAAaN,OACtChH,UAAWhJ,KAAKQ,MAAMwI,UAAU2I,QAElC,cAAC,GAAD,CAAmB9R,IAAKG,KAAK8d,YAAa9U,UAAWhJ,KAAKQ,MAAMwI,UAAU2I,QAC1E,cAAC,GAAD,CACE7F,YAAa9L,KAAKQ,MAAMsL,YACxB/C,sBAAuB/I,KAAK+I,sBAC5BC,UAAWhJ,KAAKQ,MAAMwI,UAAU2I,MAChChG,QAAS3L,KAAK2L,QAEd1I,cAAejD,KAAKiD,cACpB2F,eAAgB5I,KAAKQ,MAAMoI,eAC3B5F,qBAAsBhD,KAAKgD,qBAC3B6F,uBAAwB7I,KAAK6I,uBAC7BC,wBAAyB9I,KAAK8I,wBAC9B8E,cAAe5N,KAAK4N,cACpBhE,QAAS5J,KAAKQ,MAAMoJ,QACpBC,iBAAkB7J,KAAK6J,iBACvB1B,iBAAkBnI,KAAKmI,iBACvBX,cAAexH,KAAKwH,cACpB3H,IAAKG,KAAKiW,QAXLjW,KAAKQ,MAAMuU,iB,GA3dV/W,IAAMsC,WA8eT2L,gBAjfG,SAAAlR,GAAK,MAAK,KAifbkR,CAAsByR,IE1hBrCqC,IAASC,OACP,cAAC,GAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5078b82e.chunk.js","sourcesContent":["// Import React\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport DownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nconst transformDict = {\r\n    \"up\": \"rotate(0deg)\",\r\n    \"down\": \"rotate(180deg)\",\r\n    \"right\": \"rotate(90deg)\",\r\n    \"left\": \"rotate(270deg)\",\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    retractButton: {\r\n        position: \"absolute\",\r\n        width: 100,\r\n        height: 10,\r\n        backgroundColor: theme.palette.background.light,\r\n        borderBottomLeftRadius: 10,\r\n        borderBottomRightRadius: 10,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        marginLeft: -50,\r\n        marginTop: -5,\r\n        visibility: \"visible\", // ensures even with say transformations where visibility is hidden after transforming, that the button is still visible\r\n    }\r\n}));\r\n\r\nfunction RetractButton(props) {\r\n    const classes = useStyles();\r\n    const transform = transformDict[props.direction];\r\n    const Icon = props.checked ? UpIcon : DownIcon;\r\n    return (\r\n        <div\r\n            className={classes.retractButton}\r\n            onClick={props.onClick}\r\n            style={{\r\n                transform: \"scale(0.6)\" + transform,\r\n                top: props.top,\r\n                left: props.left,\r\n            }}\r\n        >\r\n            <Icon size=\"small\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RetractButton;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport loadScenario from '../scripts/loadScenario.js';\r\nimport Dropzone from 'react-dropzone';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n// Import retract button custom component\r\nimport RetractButton from './RetractButton.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    menuContainer: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        height: 25,\r\n        width: 255,\r\n        zIndex: 1,\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        justifyContent: \"flex-start\",\r\n        borderBottomStyle: \"ridge\",\r\n        borderRightStyle: \"ridge\",\r\n        borderColor: theme.palette.border,\r\n        backgroundImage: theme.palette.backgroundImage.main,\r\n        WebkitBorderImage: theme.palette.borderImage\r\n    },\r\n    menuButton: {\r\n        fontSize: 12,\r\n        margin: 0,\r\n        padding: 0,\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nfunction MenuComponent(props) {\r\n    const classes = useStyles();\r\n    const [display, setDisplay] = React.useState(true);\r\n    return (\r\n        <Slide direction=\"down\" in={display} unmountOnExit={false} mountOnEnter={false}>\r\n            <div className={classes.menuContainer} id=\"menu\">\r\n                <Button size=\"small\" className={classes.menuButton} onClick={() => window.location.reload()}>New</Button>\r\n                <Button size=\"small\" className={classes.menuButton} onClick={props.save}>Save</Button>\r\n                <Dropzone\r\n                    onDrop={acceptedFiles => {\r\n                        loadScenario(acceptedFiles[0], props.loadSave);\r\n                    }}\r\n                >\r\n                    {/*acceptedFiles[0] as we only care about a single file TODO: make some restriction to filetype (.json) to upload and number of files to upload (1 only)*/}\r\n                    {/*TODO: Here we used a drop zone, this might be an overkill to be honest as I only need a load button, so if performance drops too much or too much bandwidth taken, try to simplify this*/}\r\n                    {({ getRootProps, getInputProps }) => (\r\n                        <div {...getRootProps()}>\r\n                            <input {...getInputProps()} />\r\n                            <Button size=\"small\" className={classes.menuButton}>Load</Button>\r\n                            {/*This is a dummy button for visuals only, the uploading functionality is contained in the Dropzone and the input element*/}\r\n                        </div>\r\n                    )}\r\n                </Dropzone>\r\n                <Button size=\"small\" className={classes.menuButton} onClick={props.openHelp}>Help</Button>\r\n                <RetractButton direction=\"up\" top={31} left={\"50%\"} checked={display} onClick={() => setDisplay(!display)} />\r\n            </div>\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport default React.memo(MenuComponent);","// Expects a single file object, one that is compatible with JSON.stringify after processing\r\n// Returns the JSON object\r\nexport default function loadScenario(file, onload=null) {\r\n    file.text().then(text => {\r\n        const obj = JSON.parse(text);\r\n        if (onload) {\r\n            onload(obj);\r\n        }\r\n    });\r\n}","import React from 'react';\r\nimport { divIcon } from \"leaflet\";\r\nimport PropTypes from 'prop-types';\r\nimport { Marker } from \"react-leaflet\";\r\nimport Popup from 'react-leaflet-editable-popup';\r\nimport './JsxMarker.css';\r\n\r\n// Component that gives a \r\nclass JsxMarkerContent extends React.Component {\r\n\r\n    onRef(ref) {\r\n\r\n        if (ref) {\r\n            const html = ref.innerHTML;\r\n            if (html !== this.previousHtml) {\r\n                this.props.onRender(html);\r\n                this.previousHtml = html;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jsx-marker\" style={{ display: 'none' }} ref={this.onRef.bind(this)}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nclass JsxMarker extends React.Component {\r\n\r\n    static propTypes = {\r\n        position: PropTypes.object,\r\n        className: PropTypes.string\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            html: null\r\n        };\r\n\r\n        this.markerRef = React.createRef(null);\r\n    }\r\n\r\n    onInsideRender(html) {\r\n\r\n        // Set it\r\n        this.setState({ html });\r\n    }\r\n\r\n    render() {\r\n\r\n        const { html } = this.state;\r\n        let marker = false;\r\n        if (html) {\r\n\r\n            // Create divIcon\r\n            const icon = divIcon({\r\n                className: this.props.className,\r\n                html,\r\n                iconSize: [this.props.size, this.props.size],\r\n            });\r\n            marker = <Marker\r\n                draggable\r\n                position={this.props.position}\r\n                ref={this.markerRef}\r\n                icon={icon} {...this.props}\r\n                eventHandlers={{\r\n                    dragend: () => {\r\n                        this.props.updatePosition(this.props.markerID, this.markerRef.current.getLatLng());\r\n                    }\r\n                }}\r\n            >\r\n                <Popup\r\n                    editable\r\n                    removable\r\n                    closeButton={false}\r\n                    autoClose={false}\r\n                    closeOnClick={false}\r\n                    saveContentCallback={content => this.props.updateContent(this.props.markerID, content)}\r\n                    removalCallback={index => this.props.removeMarker(this.props.markerID)}\r\n                >\r\n                    {this.props.content}\r\n                </Popup>\r\n            </Marker>\r\n\r\n        }\r\n\r\n\r\n        return (<React.Fragment>\r\n\r\n            <JsxMarkerContent onRender={html => this.onInsideRender(html)}>\r\n                {this.props.children}\r\n            </JsxMarkerContent>\r\n\r\n            {marker}\r\n\r\n        </React.Fragment>);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default JsxMarker;","import React from \"react\";\r\nimport L from \"leaflet\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport \"leaflet-lasso\";\r\n\r\nexport default function LassoComponent(props) {\r\n    // Event handler for when lasso selection is complete\r\n    const eventHandler = event => {\r\n        let indices = [];\r\n        if (event) { // Series of if statements to only record in indices the valid selected regions TODO: this seems a bit dodgy, problem is this is like one of those silently neglect mistakes types of code\r\n            if (event.layers) {\r\n                event.layers.forEach(layer => {\r\n                    if (layer) {\r\n                        if (layer.feature) {\r\n                            if (layer.feature.properties) {\r\n                                if (layer.feature.properties.regionID) {\r\n                                    indices.push(layer.feature.properties.regionID);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                });       \r\n            }\r\n        }\r\n        props.updateLassoSelecting(false, () => {props.assignRegions(indices);})\r\n    };\r\n\r\n    // Setup lasso\r\n    const map = useMap();\r\n    const lasso = L.lasso(map);\r\n    lasso.setOptions({ intersect: true });\r\n    lasso.enable();\r\n\r\n    React.useEffect(() => {\r\n        // Execute region coloring upon lasso selection completion\r\n        map.addEventListener('lasso.finished', eventHandler);\r\n\r\n        return (() => { // What to do on unmounting the LassoComponent\r\n            lasso.disable(); // FIXME: bug: disabling via clicking cancel button, i.e. in the case of disabling via using the cancel button, appears to lead to the drawing of selection persisting, though that selection has no coloring effect\r\n            map.removeEventListener('lasso.finished', eventHandler); // Remove event handler to avoid creating multiple handlers\r\n        });\r\n    }, [map, lasso]);\r\n\r\n    return null;\r\n}\r\n","// Add leaflet providers here\r\nconst mapProviders = [\r\n    {\r\n        name: \"Esri.WorldImagery\",\r\n        attr: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',\r\n        src: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'\r\n    },\r\n    {\r\n        name: \"Empty Map\",\r\n        attr: '',\r\n        src: ''\r\n    },\r\n    {\r\n        name: \"OpenTopoMap\",\r\n        attr: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)',\r\n        src: 'https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'\r\n    },\r\n    {\r\n        name: \"OpenStreetMap.Mapnik\",\r\n        attr: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n        src: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\r\n    },\r\n    {\r\n        name: \"Stamen.TerrainBackground\",\r\n        attr: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n        src: 'https://stamen-tiles-{s}.a.ssl.fastly.net/terrain-background/{z}/{x}/{y}{r}.png'\r\n    },\r\n    {\r\n        name: \"Stamen.Watercolor\",\r\n        attr: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n        src: 'https://stamen-tiles-{s}.a.ssl.fastly.net/watercolor/{z}/{x}/{y}.png'\r\n    },\r\n    {\r\n        name: \"Stamen.TonerBackground\",\r\n        attr: 'Map tiles by <a href=\"http://stamen.com\">Stamen Design</a>, <a href=\"http://creativecommons.org/licenses/by/3.0\">CC BY 3.0</a> &mdash; Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n        src: 'https://stamen-tiles-{s}.a.ssl.fastly.net/toner-background/{z}/{x}/{y}{r}.png'\r\n    },\r\n]\r\n\r\nexport default mapProviders;","function generateUniqueID(obj) {\r\n    let id = Math.floor(Math.random() * 10000);\r\n    if (id in obj) {\r\n        return generateUniqueID(obj);\r\n    } else {\r\n        return id;\r\n    }\r\n}\r\n\r\nexport default generateUniqueID;","import {\r\n    GiWarAxe, GiAxeSword, GiBloodySword, GiBroadsword, GiCrossedSwords, GiDervishSwords,\r\n    GiAntiAircraftGun, GiFieldGun, GiSaberAndPistol, GiPistolGun, GiRevolver, GiWinchesterRifle,\r\n    GiApc, GiHorseHead, GiCavalry, GiTankTread, GiTank, GiBattleTank,\r\n    GiModernCity, GiLighthouse, GiHouse, GiRefinery, GiFamilyHouse, GiCastle,\r\n    GiElvenCastle, GiSteamLocomotive, GiStoneTower, GiBarracks, GiBarracksTent, GiAqueduct,\r\n    GiCargoShip, GiBattleship, GiShipBow, GiShipWheel, GiSinagot, GiShoonerSailboat,\r\n    GiEagleEmblem, GiWingedEmblem, GiHawkEmblem, GiSteelwingEmblem, GiSwordsEmblem, GiCondorEmblem,\r\n    GiRadioactive, GiRadarSweep, GiSpikedDragonHead, GiRoundStar, GiSeaDragon, GiSeaSerpent\r\n} from 'react-icons/gi';\r\n\r\nconst markerIcons = [\r\n    GiWarAxe, GiAxeSword, GiBloodySword, GiBroadsword, GiCrossedSwords, GiDervishSwords,\r\n    GiAntiAircraftGun, GiFieldGun, GiSaberAndPistol, GiPistolGun, GiRevolver, GiWinchesterRifle,\r\n    GiApc, GiHorseHead, GiCavalry, GiTankTread, GiTank, GiBattleTank,\r\n    GiModernCity, GiLighthouse, GiHouse, GiRefinery, GiFamilyHouse, GiCastle,\r\n    GiElvenCastle, GiSteamLocomotive, GiStoneTower, GiBarracks, GiBarracksTent, GiAqueduct,\r\n    GiCargoShip, GiBattleship, GiShipBow, GiShipWheel, GiSinagot, GiShoonerSailboat,\r\n    GiEagleEmblem, GiWingedEmblem, GiHawkEmblem, GiSteelwingEmblem, GiSwordsEmblem, GiCondorEmblem,\r\n    GiRadioactive, GiRadarSweep, GiSpikedDragonHead, GiRoundStar, GiSeaDragon, GiSeaSerpent\r\n]\r\n\r\nexport default markerIcons;","// Import React\r\nimport React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n// Import leaflet and related libraries\r\nimport { MapContainer, GeoJSON, TileLayer, AttributionControl, LayersControl, FeatureGroup, useMap } from 'react-leaflet';\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport JsxMarker from \"./JsxMarker.js\";\r\n\r\n// Import relevant custom components for plugins\r\nimport LassoComponent from \"./LassoComponent.js\";\r\n\r\n// Import mapProviders settings\r\nimport mapProviders from '../settings/mapProviders.js';\r\n\r\n// Additional imports\r\nimport cloneDeep from \"clone-deep\";\r\nimport generateUniqueID from \"../scripts/generateUniqueID.js\";\r\nimport markerIcons from \"../assets/other/markerIcons.js\";\r\n\r\nconst useStyles = theme => ({\r\n    mapContainer: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100vw\",\r\n        height: \"calc(100vh - 45px)\", // the -50px is to ensure that the map's bottom meets the timeline bar, hence if timeline bar height is adjusted, adjust map height here accordingly\r\n        zIndex: 0,\r\n        filter: \"brightness(1) contrast(100%)\",\r\n    },\r\n    markerIcon: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    }\r\n});\r\nclass MapComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            markerData: props.getMarkerData(),\r\n        }\r\n\r\n        // Add references to useful entites\r\n        this.geojsonRef = React.createRef(null);\r\n        this.mapElement = null;\r\n\r\n        // Binding methods\r\n        this.onEachFeature = this.onEachFeature.bind(this);\r\n        this.style = this.style.bind(this);\r\n        this.resetAllRegionStyle = this.resetAllRegionStyle.bind(this);\r\n        this.clickRegion = this.clickRegion.bind(this);\r\n        this.highlightRegion = this.highlightRegion.bind(this);\r\n        this.resetHighlightRegion = this.resetHighlightRegion.bind(this);\r\n        this.resetSpecifiedRegionStyle = this.resetSpecifiedRegionStyle.bind(this);\r\n        this.addMarker = this.addMarker.bind(this);\r\n        this.updateMarkerPosition = this.updateMarkerPosition.bind(this);\r\n        this.updateMarkerData = this.updateMarkerData.bind(this);\r\n        this.updateMarkerContent = this.updateMarkerContent.bind(this);\r\n        this.removeMarker = this.removeMarker.bind(this);\r\n    }\r\n\r\n    removeMarker(markerID) {\r\n        let currentData = cloneDeep(this.state.markerData);\r\n\r\n        delete currentData[markerID];\r\n\r\n        this.setState({ markerData: currentData }, () => {\r\n            this.props.updateMarkerData(this.state.markerData);\r\n        });        \r\n    }\r\n\r\n    updateMarkerPosition(markerID, position) {\r\n        let currentData = cloneDeep(this.state.markerData);\r\n\r\n        currentData[markerID].lat = position.lat;\r\n        currentData[markerID].lng = position.lng;\r\n\r\n        this.setState({ markerData: currentData }, () => {\r\n            this.props.updateMarkerData(this.state.markerData);\r\n        });\r\n    }\r\n\r\n    updateMarkerContent(markerID, content) {\r\n        let currentData = cloneDeep(this.state.markerData);\r\n\r\n        currentData[markerID].content = content;\r\n\r\n        this.setState({ markerData: currentData }, () => {\r\n            this.props.updateMarkerData(this.state.markerData);\r\n        });        \r\n    }\r\n\r\n    addMarker(iconIndex, color, lat = 50, lng = 0, content = \"\") {\r\n        let currentData = cloneDeep(this.state.markerData);\r\n\r\n        // Generate a unique ID\r\n        const id = generateUniqueID(currentData);\r\n\r\n        currentData[id] = {\r\n            iconIndex: iconIndex,\r\n            color: color,\r\n            lat: lat,\r\n            lng: lng,\r\n            content: content\r\n        };\r\n        this.setState({ markerData: currentData }, () => {\r\n            this.props.updateMarkerData(this.state.markerData);\r\n        });\r\n    }\r\n\r\n    // Updates marker data to correspond to the active entry\r\n    updateMarkerData(callback=null) {\r\n        this.setState({ markerData: this.props.getMarkerData() }, () => {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n        });\r\n    }\r\n\r\n    onEachFeature(feature, layer) {\r\n        layer.addEventListener(\"click\", () => {\r\n            this.clickRegion(feature, layer);\r\n        });\r\n        layer.addEventListener(\"mouseover\", () => {\r\n            if (!this.props.lassoSelecting) {\r\n                // Ensures lasso selection is not interfered by mouse events\r\n                this.highlightRegion(feature, layer);\r\n                this.props.processRegionHoveredOn(layer);\r\n            }\r\n        });\r\n        layer.addEventListener(\"mouseout\", () => {\r\n            if (!this.props.lassoSelecting) {\r\n                // Ensures lasso selection is not interfered by mouse events\r\n                this.resetHighlightRegion(feature, layer);\r\n                this.props.processRegionHoveredOut(layer);\r\n            }\r\n        });\r\n    }\r\n\r\n    style(feature, layer) {\r\n        const color = this.props.getRegionColorByIndex(feature.properties.regionID);\r\n        return {\r\n            color: this.props.themeDict.polyStrokeColor,\r\n            weight: this.props.themeDict.polyStrokeWeight,\r\n            fillColor: color ? color : this.props.themeDict.polyFillColorDefault,\r\n            fillOpacity: color ? this.props.themeDict.polyFillOpacityColored : this.props.themeDict.polyFillOpacityDefault,\r\n        };\r\n    }\r\n\r\n\r\n    hightlightStyle(feature, layer) {\r\n        return {\r\n            fillOpacity: this.props.themeDict.polyFillOpacityHovered\r\n        };\r\n    }\r\n\r\n    highlightRegion(feature, layer) {\r\n        layer.setStyle(this.hightlightStyle(feature, layer));\r\n    }\r\n\r\n    resetHighlightRegion(feature, layer) {\r\n        layer.setStyle(this.style(feature, layer));\r\n    }\r\n\r\n    clickRegion(feature, layer) {\r\n        if (this.props.picking) {\r\n            const color = this.props.getRegionColorByIndex(feature.properties.regionID);\r\n            if (color) {\r\n                // if region has a color, else just do nothing\r\n                this.props.setColorBarColor(color);\r\n            }\r\n        } else {\r\n            // Picking color tool not selected, hence color region as usual\r\n            this.props.assignRegions([feature.properties.regionID]);\r\n            layer.setStyle(this.style(feature, layer)); // TODO: such setting would not highlight the region though, which might be a problem\r\n        }\r\n    }\r\n\r\n    // Resets styles of all regions to match those of the regionDict data\r\n    resetAllRegionStyle() {\r\n        Object.values(this.geojsonRef.current._layers).forEach(layer => {\r\n            layer.setStyle(this.style(layer.feature, layer));\r\n        });\r\n    }\r\n\r\n    // Resets style of specified regions to match those of regionDict data\r\n    resetSpecifiedRegionStyle(indices) {\r\n        let layers = Object.values(this.geojsonRef.current._layers);\r\n        indices.forEach(index => {\r\n            let layer = layers[index];\r\n            let feature = layer.feature;\r\n            layers[index].setStyle(this.style(feature, layer));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        const markers = Object.entries(this.state.markerData).map(marker => {\r\n            const Icon = markerIcons[marker[1].iconIndex];\r\n            return (\r\n                <JsxMarker\r\n                    key={marker[0]}\r\n                    markerID={marker[0]}\r\n                    position={{\r\n                        lat: marker[1].lat,\r\n                        lng: marker[1].lng\r\n                    }}\r\n                    size={this.props.themeDict.markerSize}\r\n                    content={marker[1].content}\r\n                    updatePosition={this.updateMarkerPosition}\r\n                    updateContent={this.updateMarkerContent}\r\n                    removeMarker={this.removeMarker}\r\n                >\r\n                    <Icon className={classes.markerIcon} style={{ color: marker[1].color }} />\r\n                </JsxMarker>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <MapContainer\r\n                center={[30, 0]}\r\n                zoom={3}\r\n                scrollWheelZoom\r\n                preferCanvas\r\n                zoomSnap={0}\r\n                wheelPxPerZoomLevel={120}\r\n                doubleClickZoom={false}\r\n                zoomControl={false}\r\n                attributionControl={false}\r\n                worldCopyJump\r\n                id=\"map\"\r\n                whenCreated={map => {this.mapElement = map;}}\r\n                className={classes.mapContainer}\r\n            >\r\n                <LayersControl position=\"topright\">\r\n                    {mapProviders.map((entry, index) => <LayersControl.BaseLayer key={entry.name} checked={index === 0} name={entry.name}>\r\n                        <TileLayer\r\n                            attribution={entry.attr}\r\n                            url={entry.src}\r\n                        ></TileLayer>\r\n                    </LayersControl.BaseLayer>)}\r\n                    <LayersControl.Overlay checked name=\"Regions\">\r\n                        <GeoJSON\r\n                            data={this.props.baseMap}\r\n                            style={this.style}\r\n                            onEachFeature={this.onEachFeature}\r\n                            smoothFactor={0}\r\n                            ref={this.geojsonRef}\r\n                        ></GeoJSON>\r\n                    </LayersControl.Overlay>\r\n                    <LayersControl.Overlay checked name=\"Markers\">\r\n                        <FeatureGroup key={this.props.activeEntry}>\r\n                            {markers}\r\n                        </FeatureGroup>\r\n                    </LayersControl.Overlay>\r\n                </LayersControl>\r\n                <AttributionControl position=\"bottomright\" />\r\n                {this.props.lassoSelecting && <LassoComponent updateLassoSelecting={this.props.updateLassoSelecting} assignRegions={this.props.assignRegions} />}\r\n            </MapContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(MapComponent);","const defaultColors = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#F44E3B', '#FE9200', '#FCDC00',\r\n    '#DBDF00', '#A4DD00', '#68CCCA', '#73D8FF', '#AEA1FF', '#FDA1FF',\r\n    '#333333', '#808080', '#cccccc', '#D33115', '#E27300', '#FCC400',\r\n    '#B0BC00', '#68BC00', '#16A5A5', '#009CE0', '#7B64FF', '#FA28FF',\r\n]\r\n\r\nexport default defaultColors;","// Import React\r\nimport React from \"react\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n// Import retract button custom component\r\nimport RetractButton from './RetractButton.js';\r\n\r\n// Import color picker\r\nimport { SliderPicker, CompactPicker } from 'react-color';\r\nimport defaultColors from \"../assets/other/defaultColors\";\r\n\r\nconst useStyles = theme => ({\r\n    colorBarContainer: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: \"50%\",\r\n        width: 360,\r\n        height: 60,\r\n        zIndex: 2,\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        flexFlow: \"row\",\r\n        alignItems: \"center\",\r\n        marginLeft: -185,\r\n        marginTop: 30,\r\n        padding: 5,\r\n        borderStyle: \"ridge\",\r\n        borderColor: theme.palette.border,\r\n        backgroundImage: theme.palette.backgroundImage.main,\r\n        WebkitBorderImage: theme.palette.borderImage\r\n    },\r\n    sliderPickerContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"stretch\",\r\n        width: 120\r\n    },\r\n    compactPickerContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"stretch\",\r\n        width: 245,\r\n        margin: -22,\r\n        transform: \"scale(0.8)\",\r\n    },\r\n    rgbInput: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        flexFlow: \"row\",\r\n    },\r\n    currentColor: {\r\n        height: 20,\r\n        width: 20,\r\n        margin: 5\r\n    },\r\n    compactPicker: {\r\n        backgroundColor: theme.palette.background.light,\r\n    },\r\n});\r\n\r\nclass ColorBarComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            color: \"#bf4340\", // Default color, it is the color when slider in first row of color bar is set to leftmost position, and the centre one of the 5 colors in the second row of the color bar is chosen\r\n            display: true, // Default to showing the colorbar\r\n        }\r\n    }\r\n\r\n    render() { //FIXME: add some color tests to ensure that selected color is notified if coincides with a color already on the page\r\n        const { classes } = this.props;\r\n        const colorHex = this.state.color;\r\n        return (\r\n            <Slide direction=\"down\" in={this.state.display} unmountOnExit={false} mountOnEnter={false}>\r\n                <div className={classes.colorBarContainer} id=\"colorbar\">\r\n                    <div className={classes.currentColor} style={{ backgroundColor: colorHex }} />\r\n                    <div className={classes.sliderPickerContainer}>\r\n                        <SliderPicker color={colorHex} onChange={(color, event) => this.setState({ color: color.hex })} />\r\n                    </div>\r\n                    <div className={classes.compactPickerContainer}>\r\n                        <CompactPicker className={classes.compactPicker} color={colorHex} colors={defaultColors} onChange={(color, event) => this.setState({ color: color.hex })} />\r\n                    </div>\r\n                    <RetractButton direction=\"up\" top={76} left={27} checked={this.state.display} onClick={() => this.setState({ display: !this.state.display })} />\r\n                </div>\r\n            </Slide>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(ColorBarComponent);","// Import React\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n// Import retract button custom component\r\nimport RetractButton from './RetractButton.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbarContainer: {\r\n        position: \"absolute\",\r\n        top: 102,\r\n        right: \"50%\",\r\n        marginRight: -202 / 2,\r\n        height: 30,\r\n        width: 190,\r\n        zIndex: 1,\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        justifyContent: \"flex-end\",\r\n        borderStyle: \"ridge\",\r\n        borderColor: theme.palette.border,\r\n        backgroundImage: theme.palette.backgroundImage.main,\r\n        WebkitBorderImage: theme.palette.borderImage\r\n    },\r\n    toolbarButton: {\r\n        fontSize: 12,\r\n        margin: 0,\r\n        padding: 0,\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nfunction ToolbarComponent(props) {\r\n    const classes = useStyles();\r\n    const lassoButtonText = props.lassoSelecting ? \"Cancel\" : \"Lasso\"; // TODO: using switches might be better in these situations\r\n    const lassoButtonColor = props.lassoSelecting ? \"secondary\" : \"default\";\r\n    const eraserButtonText = props.erasing ? \"Cancel\" : \"Erase\";\r\n    const eraserButtonColor = props.erasing ? \"secondary\" : \"default\";\r\n    const pickingButtonText = props.picking ? \"Cancel\" : \"Pick\";\r\n    const pickingButtonColor = props.picking ? \"secondary\" : \"default\";\r\n    const [display, setDisplay] = React.useState(true);\r\n    return (\r\n        <Slide direction=\"down\" in={display} unmountOnExit={false} mountOnEnter={false}>\r\n            <div className={classes.toolbarContainer} id=\"toolbar\">\r\n                <Button\r\n                    color={eraserButtonColor}\r\n                    className={classes.toolbarButton}\r\n                    onClick={() => {\r\n                        props.updatePicking(false, () => {\r\n                            props.updateErasing(!props.erasing);\r\n                        })\r\n                    }}\r\n                >\r\n                    {eraserButtonText}\r\n                </Button>\r\n                <Button\r\n                    color={lassoButtonColor}\r\n                    className={classes.toolbarButton}\r\n                    onClick={() => {\r\n                        props.updatePicking(false, () => {\r\n                            props.updateLassoSelecting(!props.lassoSelecting);\r\n                        })\r\n                    }}\r\n                >\r\n                    {lassoButtonText}\r\n                </Button>\r\n                <Button\r\n                    color={pickingButtonColor}\r\n                    className={classes.toolbarButton}\r\n                    onClick={() => {\r\n                        props.updateLassoSelecting(false, () => {\r\n                            props.updateErasing(false, () => {\r\n                                props.updatePicking(!props.picking);\r\n                            });\r\n                        });\r\n                    }}\r\n                >\r\n                    {pickingButtonText}\r\n                </Button>\r\n                <RetractButton direction=\"up\" top={36} left={\"50%\"} checked={display} onClick={() => setDisplay(!display)} />\r\n            </div>\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport default React.memo(ToolbarComponent);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport cloneDeep from \"clone-deep\";\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    legendContainer: {\r\n        height: 240,\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"space-evenly\"\r\n    },\r\n    legendEntry: {\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    legendEntryColor: {\r\n        width: 12,\r\n        height: 12,\r\n        margin: 5,\r\n    },\r\n    legendEntryLabel: {\r\n        width: 80,\r\n        fontSize: 10,\r\n    },\r\n    legendEntryNum: {\r\n        marginLeft: 5,\r\n        marginRight: 5,\r\n        fontSize: 10,\r\n    },\r\n    legendGrid: {\r\n        height: 180,\r\n    },\r\n    totalLabel: {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        transform: \"scale(0.9)\"\r\n    },\r\n    displayNumSwitch: {\r\n        transform: \"scale(0.6)\",\r\n    },\r\n    displayNumSwitchContainer: {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"flex-end\",\r\n    }\r\n}));\r\n\r\nfunction LegendEntry(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.legendEntry}>\r\n            <div\r\n                style={{ backgroundColor: props.color }}\r\n                className={classes.legendEntryColor}\r\n                onClick={() => {\r\n                    props.setColorBarColor(props.color);\r\n                }}\r\n            />\r\n            <InputBase\r\n                className={classes.legendEntryLabel}\r\n                value={props.label}\r\n                onChange={props.onChange}\r\n            />\r\n            {props.displayNum && <Typography variant=\"caption\" className={classes.legendEntryNum}>{props.num}</Typography>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction LegendComponent(props) {\r\n    const classes = useStyles();\r\n    const [displayNum, setDisplayNum] = React.useState(true);\r\n    const entries = Object.keys(props.app.state.pluginData[\"Legend\"][props.app.state.activeEntry]).map((color) =>\r\n        <LegendEntry\r\n            key={color}\r\n            color={color}\r\n            label={props.app.state.pluginData[\"Legend\"][props.app.state.activeEntry][color]}\r\n            num={props.app.state.colorData[props.app.state.activeEntry][color]}\r\n            displayNum={displayNum}\r\n            item\r\n            onChange={e => {\r\n                let currentLegendData = cloneDeep(props.app.state.pluginData[\"Legend\"]);\r\n                currentLegendData[props.app.state.activeEntry][color] = e.target.value;\r\n                props.app.updatePluginData(\"Legend\", currentLegendData);\r\n            }}\r\n            setColorBarColor={props.app.setColorBarColor}\r\n        />);\r\n    return (\r\n        <div className={classes.legendContainer}>\r\n            <div className={classes.displayNumSwitchContainer}>\r\n                <FormControlLabel\r\n                    className={classes.displayNumSwitch}\r\n                    control={<Switch checked={displayNum} onChange={() => setDisplayNum(!displayNum)} />}\r\n                    label=\"Counts\"\r\n                    labelPlacement=\"start\"\r\n                />\r\n            </div>\r\n            <div className={classes.totalLabel}>\r\n                <Typography variant=\"caption\">Total Regions: {props.app.baseMap.features.length}</Typography>\r\n            </div>\r\n            <Scrollbars>\r\n                <Grid container direction=\"column\" justify=\"flex-start\" wrap=\"wrap\" className={classes.legendGrid}>\r\n                    {entries}\r\n                </Grid>\r\n            </Scrollbars>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst initState = scenarioData => {\r\n    let retval = [];\r\n    let i;\r\n    for (i = 0; i < scenarioData.length; i++) {\r\n        retval.push({});\r\n    }\r\n    return retval;\r\n};\r\n\r\n// Adds color-label key value pair to pluginData entry for level of corresponding activeEntry if color was added for the first time, or delete the entry if no region has the color after the assigning\r\nfunction onAssignRegions(app, indices, color, removedColors, addedColor) {\r\n    let currentLegendData = cloneDeep(app.state.pluginData[\"Legend\"]);\r\n    if (addedColor) {\r\n        currentLegendData[app.state.activeEntry][color] = \"Label\";\r\n    }\r\n    removedColors.forEach(color => {\r\n        delete currentLegendData[app.state.activeEntry][color];\r\n    });\r\n    app.updatePluginData(\"Legend\", currentLegendData);\r\n}\r\n\r\nfunction onAddEntry(app, index) {\r\n    let currentLegendData = cloneDeep(app.state.pluginData[\"Legend\"]);\r\n    let newLegendEntry = null;\r\n    if (index > 0) { // Use new\r\n        newLegendEntry = cloneDeep(currentLegendData[index - 1]);\r\n    } else { // Use default\r\n        newLegendEntry = {};\r\n    }\r\n    currentLegendData.splice(index, 0, newLegendEntry);\r\n    return currentLegendData;\r\n}\r\n\r\nfunction onDeleteEntry(app, index) {\r\n    let currentLegendData = cloneDeep(app.state.pluginData[\"Legend\"]);\r\n    currentLegendData.splice(index, 1);\r\n    return currentLegendData;\r\n}\r\n\r\n// This dictionary contains the component, initial state value generation function for the plugin's entry in pluginData; this be based off the scenarioData state value\r\nconst LegendPluginDict = {\r\n    component: LegendComponent,\r\n    initState: initState,\r\n    help: \"Click to edit labells. Note legend is scrollable. Numbers beside labels represent regions with the label.\",\r\n    functions: {\r\n        onAssignRegions: onAssignRegions,\r\n        onAddEntry: onAddEntry, // Expects index argument\r\n        onDeleteEntry: onDeleteEntry, // Expects index argument\r\n    }\r\n};\r\n\r\nexport default LegendPluginDict;","import { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    regionInfoContainer: {\r\n        width: \"100%\",\r\n        paddingLeft: 10,\r\n    },\r\n    regionInfoColor: {\r\n        width: 15,\r\n        height: 15,\r\n        marginLeft: 5,\r\n        marginRight: 10,\r\n        borderColor: theme.palette.text.primary,\r\n    },\r\n    regionInfoLabel: {\r\n        margin: 5,\r\n        paddingTop: 10,\r\n        paddingBottom: 10,\r\n    },\r\n}));\r\n\r\nfunction RegionInfoComponent(props) {\r\n    const classes = useStyles();\r\n    const data = props.app.state.pluginData[\"Region Info\"];\r\n    return (\r\n        <Grid id=\"region_info\" container direction=\"column\" justify=\"flex-start\" alignItems=\"flex-start\" className={classes.regionInfoContainer}>\r\n            <Grid container item direction=\"row\" justify=\"flex-start\" alignItems=\"center\">\r\n                <div\r\n                    item=\"true\"\r\n                    style={{ backgroundColor: data.color ? data.color : props.app.themeDictDefault.other.polyFillColorDefault }}\r\n                    className={classes.regionInfoColor}\r\n                />\r\n                <Typography variant=\"body2\" item=\"true\">{\"Name: \"}{data.name ? data.name : \"None\"}</Typography>\r\n            </Grid>\r\n            <Typography item=\"true\" variant=\"caption\" className={classes.regionInfoLabel}>{\"Label: \"}{data.label ? data.label : \"None\"}</Typography>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nconst initState = scenarioData => {\r\n    return {\r\n        color: null,\r\n        name: null,\r\n        label: null,\r\n    };\r\n};\r\n\r\n// Sets region info to appropriate values based on hovered on layer\r\nfunction onProcessRegionHoveredOn(app, layer) {\r\n    const regionID = layer.feature.properties.regionID;\r\n    const color = app.state.scenarioData[app.state.activeEntry].regionDict[regionID].color;\r\n    const name = layer.feature.properties.name;\r\n    const label = app.state.pluginData[\"Legend\"][app.state.activeEntry][color];\r\n    let newRegionInfoData = {\r\n        color: color ? color : null,\r\n        name: name ? name : null,\r\n        label: label ? label : null,\r\n    };\r\n    app.updatePluginData(\"Region Info\", newRegionInfoData);\r\n}\r\n\r\nconst RegionInfoPluginDict = {\r\n    component: RegionInfoComponent,\r\n    initState: initState,\r\n    help: \"Displays name and label for the region hovered over.\",\r\n    functions: {\r\n        onProcessRegionHoveredOn: onProcessRegionHoveredOn,\r\n        // Although not having this causes the region info to linger on  after moving out of a region, it is faster and I feel that is worth is, nevertheless, try to find a solution that resolves the performance issue and ensures on moving out the region info is not set\r\n    }\r\n};\r\n\r\nexport default RegionInfoPluginDict;","// Import deep cloning function\r\nimport cloneDeep from 'clone-deep';\r\n\r\n// Create a scenario entry based on the inputted regionDict, date string, event description string\r\nexport default function createScenarioEntry(regionDict, date=\"\", event=\"\") {\r\n    return {\r\n        date: date,\r\n        event: event,\r\n        regionDict: cloneDeep(regionDict), // Necessary as it appears for such complicated objects simply setting equal to regionDict would not be pass by value enough, and so you end up with entries sharing state\r\n    }\r\n}","import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport createScenarioEntry from '../scripts/createScenarioEntry.js';\r\nimport cloneDeep from 'clone-deep';\r\nimport csscolors from 'css-color-names';\r\n\r\n// Adding some additional colors that I customized in the alternate history app\r\ncsscolors[\"tyrian-purple\"] = \"#66023C\";\r\ncsscolors[\"wine\"] = \"#722f37\";\r\ncsscolors[\"persian-blue\"] = \"#1C39BB\";\r\ncsscolors[\"midnight-blue\"] = csscolors[\"midnightblue\"];\r\ncsscolors[\"sky-blue\"] = csscolors[\"skyblue\"];\r\ncsscolors[\"persian-green\"] = \"#00A693\";\r\ncsscolors[\"basil\"] = \"#579229\";\r\ncsscolors[\"fire\"] = \"#e25822\";\r\ncsscolors[\"ruby\"] = \"#9B111E\";\r\n\r\n// Setup styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    altHistEditorLoaderContainer: {\r\n        height: 120,\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"100%\",\r\n        padding: 5,\r\n    },\r\n    loaderDropzone: {\r\n        textAlign: \"center\",\r\n        backgroundColor: theme.palette.background.default,\r\n        height: 120,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n\r\n}));\r\n\r\n// Class used for converting the alternate history editor save to the most recent save version in that app\r\n// This file aims to ensure back-ward compatibility of save files\r\n// Right now im doing a graduated thing of converting 1.0 to 1.1 and 1.1 to 1.2 and so on via functions for each, maybe it gets bad later but it'll be easy to refactor I assume so should be fine\r\nclass Loader { // Class which loads saves into the app, converting them regardless of version to the current version\r\n    constructor() {\r\n        this.currentSaveVersion = \"1.2\";\r\n    }\r\n\r\n    processSave(save) { // takes json parsed object file from menubar and converts it to the newest version\r\n        let version = this.detectSaveVersion(save);\r\n\r\n        if (version === \"1.0\") {\r\n            return this.processSave(this.one_zero_to_one_one(save));\r\n        } else if (version == \"1.1\") {\r\n            return this.one_one_to_one_two(save);\r\n        } else if (version == this.currentSaveVersion) { // no modification needed\r\n            return save;\r\n        }\r\n    }\r\n\r\n    one_one_to_one_two(save) { // converts 1.1 ver save to 1.2 ver save TODO: slight concerns as maybe pass by reference not value;\r\n        save.version = this.currentSaveVersion;\r\n        save.customMap = false; // 1.1 version saves didn't have non-inbuilt custom maps\r\n        save.customMapGeojson = false; // same reason as above\r\n        return save;\r\n    }\r\n\r\n    one_zero_to_one_one(save) { // converts 1.0 ver save to 1.1 ver save TODO: slight concerns as maybe pass by reference not value\r\n        save.version = \"1.1\";\r\n        let order = 0;\r\n        Object.values(save.entryDict).forEach(entry => {\r\n            // Assigns order based on current order of entryDict (which is insertion order I think if I remembered correction for such string keys)\r\n            entry[\"order\"] = order;\r\n            order++;\r\n        });\r\n        return save;\r\n    }\r\n\r\n    detectSaveVersion(save) { // detects save version from\r\n        if (\"version\" in save) { // case of versions from 1.1 onwards which has\r\n            return save.version;\r\n        } else { // case of version 1.0, as it didn't have a version attribute\r\n            return \"1.0\";\r\n        }\r\n    }\r\n}\r\n\r\n// Instance of the Loader class\r\nconst loader = new Loader();\r\n\r\n// Converts alternate history editor saves to the format appropriate for this this app\r\n// Expects a single file object, one that is compatible with JSON.stringify after processing\r\n// Returns the JSON object\r\nfunction loadScenario(app, file, onload = null) {\r\n    file.text().then(text => {\r\n        const obj = loader.processSave(JSON.parse(text));\r\n        if (obj.mapType === \"admin\") {\r\n            let convertedObj = {\r\n                scenarioData: [],\r\n                colorData: [],\r\n                pluginData: {},\r\n            };\r\n            // Generate scenarioData\r\n            Object.values(obj.entryDict).forEach(entry => {\r\n                let regionDict = cloneDeep(app.regionDictDefault);\r\n                for (const [index, color] of Object.entries(entry.mapData)) {\r\n                    if (!(index === \"undefined\")) { // We use string \"undefined\" for that seems to be what the json loading gives from the saves\r\n                        regionDict[index].color = csscolors[color];\r\n                    }\r\n                }\r\n                convertedObj.scenarioData.push(createScenarioEntry(regionDict, entry.date, entry.event));\r\n            });\r\n\r\n            // Generate colorData (due to known issues with the alternate history editor's count of colors, we shall count colors from mapData directly as opposed to using legendData in the save)\r\n            // Color string dict is here for a mapping from hex to string for later on when we wish to use refer to color tags in the save (which are in the form of a string) via hex codes in the generated colorDict\r\n            let colorStringDict = {};\r\n            Object.values(obj.entryDict).forEach(entry => {\r\n                let colorEntry = {};\r\n                for (const [index, color] of Object.entries(entry.mapData)) {\r\n                    if (!(index === \"undefined\")) { // We use string \"undefined\" for that seems to be what the json loading gives from the saves\r\n                        if (csscolors[color] in colorEntry) {\r\n                            colorEntry[csscolors[color]] += 1;\r\n                        } else {\r\n                            colorEntry[csscolors[color]] = 1;\r\n                        }\r\n\r\n                        // Update colorStringDict if the color concerned isn't in there already\r\n                        if (!(color in colorStringDict)) {\r\n                            colorStringDict[csscolors[color]] = color;\r\n                        }\r\n                    }\r\n                }\r\n                convertedObj.colorData.push(colorEntry);;\r\n            });\r\n\r\n            // Generate pluginData\r\n            // Initialise pluginData first\r\n            let pluginData = {};\r\n            for (const [name, entry] of Object.entries(app.plugins)) {\r\n                pluginData[name] = entry.initState(convertedObj.scenarioData);\r\n            };\r\n            // Modify pluginData entries (in comparison to the initstate case) that need to be changed according to our save, in this case at the time of writing only legend need to have its data modified\r\n            // Generate Legend data\r\n            pluginData[\"Legend\"] = [];\r\n            Object.values(obj.entryDict).forEach((entry, index) => {\r\n                // Note this index is note the same as those in obj, in obj the index starts from 1, here it starts from 0\r\n                let legendEntry = {};\r\n                for (const color of Object.keys(convertedObj.colorData[index])) {\r\n                    if (colorStringDict[color] in entry.legendData) {\r\n                        legendEntry[color] = entry.legendData[colorStringDict[color]].entry;\r\n                    } else {\r\n                        legendEntry[color] = \"None\";\r\n                    }\r\n                }\r\n                pluginData[\"Legend\"].push(legendEntry);\r\n            });\r\n            convertedObj.pluginData = pluginData;\r\n\r\n            // Load converted save\r\n            if (onload) {\r\n                onload(convertedObj);\r\n            }\r\n\r\n        } else {\r\n            console.log(\"Error: currently only supports importing admin map saves\")\r\n        }\r\n    });\r\n}\r\n\r\nfunction AltHistEditorLoaderPluginComponent(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.altHistEditorLoaderContainer}>\r\n            <Dropzone\r\n                onDrop={acceptedFiles => {\r\n                    loadScenario(props.app, acceptedFiles[0], props.app.loadSave);\r\n                }}\r\n            >\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <div className={classes.loaderDropzone}>\r\n                            <div>\r\n                                Drop your save here, or click to select file\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst initState = scenarioData => {\r\n    return null;\r\n};\r\n\r\nconst AltHistEditorLoaderPluginDict = {\r\n    component: AltHistEditorLoaderPluginComponent,\r\n    initState: initState,\r\n    help: \"For loading saves from Alternate History Editor.\",\r\n    functions: {}\r\n};\r\n\r\nexport default AltHistEditorLoaderPluginDict;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\n\r\n// Import scenarios\r\nimport scen356BC from \"../assets/scenario/356BC-Birth-of-Alexander.json\";\r\nimport scen1206 from \"../assets/scenario/1206-Rise-of-Mongolia.json\";\r\nimport scen1444 from \"../assets/scenario/1444-Battle-of-Varna.json\";\r\nimport scen1936 from \"../assets/scenario/1936-Coming-of-the-Storm.json\"\r\n\r\n// Import community scenarios; this is where to import; put the files in src/assets/communityScenario, import them here, then add them to the scenarios dictionary below\r\nimport scen1914 from \"../assets/communityScenario/1914-WWI.json\";\r\nimport scen2021 from \"../assets/communityScenario/2021-Modern-Map-made-by-DawnbreakZ-edited-by-yunus3663.json\";\r\n\r\n// Import json scenarios, keys should be names that will be displayed for the scenario\r\nconst scenarios = {\r\n    \"356BC Birth of Alexander\": scen356BC,\r\n    \"1206 Rise of Mongolia\": scen1206,\r\n    \"1444 Battle of Varna\": scen1444,\r\n    \"1936 Coming of the Storm\": scen1936,\r\n};\r\n\r\nconst comScenarios = {\r\n    \"1914 WWI\": scen1914,\r\n    \"2021 Modern Map made by DawnbreakZ edited by yunus3663\": scen2021,\r\n}\r\n\r\n// Setup styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    scenarioContainer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"calc(100% - 10px)\", // This subtraction corresponds to the padding of the parent\r\n        padding: 5,\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    scenarioSelect: {\r\n        fontSize: 12,\r\n        width: \"calc(100% - 10px)\",\r\n    }\r\n}));\r\n\r\n// Load file \r\nfunction ScenarioPluginComponent(props) {\r\n    const classes = useStyles();\r\n    const [selectedScenario, setSelectedScenario] = React.useState(Object.keys(scenarios)[0]);\r\n    return (\r\n        <div id=\"scenario\" className={classes.scenarioContainer}>\r\n            <Select\r\n                value={selectedScenario}\r\n                className={classes.scenarioSelect}\r\n                onChange={e => {setSelectedScenario(e.target.value);}}\r\n            >\r\n                {Object.keys(scenarios).map(key => <MenuItem key={key} value={key}>\r\n                    {key}\r\n                </MenuItem>)}\r\n                {Object.keys(comScenarios).map(key => <MenuItem key={key} value={key}>\r\n                    {key}\r\n                </MenuItem>)}\r\n            </Select>\r\n            <Button size=\"small\" onClick={() => {\r\n                // Load save from appropriate dictionary based on what dictionary the key is in TODO: this is not the most efficient way to do it IMO, better to use I gess some label for quicker access\r\n                if (selectedScenario in scenarios) {\r\n                    props.app.loadSave(scenarios[selectedScenario]);\r\n                } else {\r\n                    props.app.loadSave(comScenarios[selectedScenario]);\r\n                }\r\n            }}>Load</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst initState = scenarioData => {\r\n    return null;\r\n};\r\n\r\nconst ScenarioPluginDict = {\r\n    component: ScenarioPluginComponent,\r\n    initState: initState,\r\n    help: \"For loading several premade scenarios.\",\r\n    functions: {}\r\n};\r\n\r\nexport default ScenarioPluginDict;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Dropzone from 'react-dropzone';\r\n\r\n// This should be used both for loading saves made with custom geojsons and for loading a custom geojson\r\n// To remove this plugin completely, technically just remove it from plugin list, but there is the mapKey attribute in the App.js which facilitates the plugin which I guess is needed for it to work well\r\n\r\n// Setup styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    customGeoJSONLoaderContainer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"calc(100% - 10px)\", // This subtraction corresponds to the padding of the parent\r\n        padding: 5,\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    loaderDropzone: {\r\n        textAlign: \"center\",\r\n        backgroundColor: theme.palette.background.default,\r\n        height: 120,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    }\r\n}));\r\n\r\n// Function for loading such file\r\n// Expects geoJSON either alone or part of a save to be of format, i.e. polygons have name, regionID attributes\r\nfunction loadGeoJSON(app, file) {\r\n    const name = file.name;\r\n    file.text().then(text => {\r\n        const obj = JSON.parse(text);\r\n        if (\"scenarioData\" in obj) {\r\n            // This is used to test obj is a save, not a geoJSON\r\n            // Expects the file to have valid data, i.e. pluginData for GeoJSON loader and appropriate scenario data, colorDict, etc.\r\n            // First load in the basemap and map key\r\n            app.resetAppBasedOnBasemap(obj.pluginData[\"Custom GeoJSON Loader\"].baseMap, obj.pluginData[\"Custom GeoJSON Loader\"].mapKey, () => {\r\n                app.updatePluginData(\"Custom GeoJSON Loader\", {\r\n                    mapKey: name, \r\n                    baseMap: obj, // TODO: could be optimised so to instead of saving inmemeory two copies of such basemap, just save 1 copy, and say pass an argyument to resetAppBasedOnBasemap\r\n                })\r\n            });\r\n            // Then load save as usual\r\n            app.loadSave(obj);\r\n        } else {\r\n            // Assumes then the loaded file is geoJSON\r\n            // Reset app based on these two updated values, baseMap and mapKey, then run callupdate to update the relevant pluginData, both mapKey and geoJSON map to record the data of the map there so saves will work\r\n            app.resetAppBasedOnBasemap(obj, name, () => {\r\n                app.updatePluginData(\"Custom GeoJSON Loader\", {\r\n                    mapKey: name, \r\n                    baseMap: obj, // TODO: could be optimised so to instead of saving inmemeory two copies of such basemap, just save 1 copy, and say pass an argyument to resetAppBasedOnBasemap\r\n                })\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n// Load file \r\nfunction CustomGeoJSONLoaderPluginComponent(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div id=\"geojson_loader\" className={classes.customGeoJSONLoaderContainer}>\r\n            <Dropzone\r\n                onDrop={acceptedFiles => {\r\n                    loadGeoJSON(props.app, acceptedFiles[0]);\r\n                }}\r\n            >\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div {...getRootProps()}>\r\n                        <input {...getInputProps()} />\r\n                        <div className={classes.loaderDropzone}>\r\n                            <div>\r\n                                Drop your save here, or click to select file\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst initState = scenarioData => {\r\n    return null;\r\n};\r\n\r\nconst CustomGeoJSONLoaderPluginDict = {\r\n    component: CustomGeoJSONLoaderPluginComponent,\r\n    initState: initState,\r\n    help: \"For loading custom region geoJSON or saves with custom regions\",\r\n    functions: {}\r\n};\r\n\r\nexport default CustomGeoJSONLoaderPluginDict;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport cloneDeep from 'clone-deep';\r\n\r\n// Setup styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    themeContainer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"calc(100% - 10px)\", // This subtraction corresponds to the padding of the parent\r\n        padding: 5,\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    themeInput: {\r\n        transform: \"scale(0.8)\",\r\n    }\r\n}));\r\n\r\n// Constant list of themeDict entries that are customizable\r\nconst custTheme = [\r\n    \"polyStrokeColor\",\r\n    \"polyStrokeWeight\",\r\n    \"polyFillColorDefault\",\r\n    \"polyFillOpacityDefault\",\r\n    \"polyFillOpacityColored\",\r\n    \"polyFillOpacityHovered\",\r\n    \"markerSize\",\r\n]\r\n\r\n// Constant list of functions for ensuring type of values in theme input fields are read correctly\r\nconst custThemeType = {\r\n    \"polyStrokeColor\": \"text\",\r\n    \"polyStrokeWeight\": \"number\",\r\n    \"polyFillColorDefault\": \"text\",\r\n    \"polyFillOpacityDefault\": \"number\",\r\n    \"polyFillOpacityColored\": \"number\",\r\n    \"polyFillOpacityHovered\": \"number\",\r\n    \"markerSize\": \"number\",\r\n};\r\nconst typeConvFunc = {\r\n    \"text\": String,\r\n    \"number\": Number,\r\n};\r\n\r\n// Labels to display in the theme panel as opposed to original labels\r\nconst fieldLabels = {\r\n    \"polyStrokeColor\": \"Reg. border color\",\r\n    \"polyStrokeWeight\": \"Reg. border width\",\r\n    \"polyFillColorDefault\": \"Default reg. color\",\r\n    \"polyFillOpacityDefault\": \"Default reg. opacity\",\r\n    \"polyFillOpacityColored\": \"Colored reg. opacity\",\r\n    \"polyFillOpacityHovered\": \"Hovered reg. opacity\",\r\n    \"markerSize\": \"Marker size\",\r\n};\r\n\r\n// Load file \r\nfunction ThemePluginComponent(props) {\r\n    const classes = useStyles();\r\n    const [themeDict, setThemeDict] = React.useState(props.app.state.themeDict.other);\r\n    const fields = Object.entries(themeDict).map(entry => {\r\n        if (custTheme.includes(entry[0])) {\r\n            return (<TextField\r\n                className={classes.themeInput}\r\n                key={entry[0]}\r\n                value={entry[1]}\r\n                label={fieldLabels[entry[0]]}\r\n                margin=\"dense\"\r\n                type={custThemeType[entry[0]]}\r\n                onChange={e => {\r\n                    let newTheme = cloneDeep(themeDict);\r\n                    newTheme[entry[0]] = typeConvFunc[custThemeType[entry[0]]](e.target.value);\r\n                    setThemeDict(newTheme);\r\n                }}\r\n            />)\r\n        }\r\n    });\r\n    return (\r\n        <div id=\"theme_panel\" className={classes.themeContainer}>\r\n            {fields}\r\n            <IconButton size=\"small\" onClick={() => {\r\n                let newTheme = cloneDeep(props.app.state.themeDict);\r\n                newTheme.other = themeDict;\r\n                props.app.setState({ themeDict: newTheme }, () => {\r\n                    props.app.mapRef.current.resetAllRegionStyle();\r\n                });\r\n            }}>\r\n                <DoneIcon />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst initState = scenarioData => {\r\n    return null;\r\n};\r\n\r\nconst ThemePluginDict = {\r\n    component: ThemePluginComponent,\r\n    initState: initState,\r\n    help: \"For modifying map visuals.\",\r\n    functions: {}\r\n};\r\n\r\nexport default ThemePluginDict;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Input from '@material-ui/core/Input';\r\nimport Popper from '@material-ui/core/Popper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport cloneDeep from \"clone-deep\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// Import icons\r\nimport markerIcons from \"../assets/other/markerIcons.js\";\r\n\r\n// Setup styles\r\nconst useStyles = makeStyles((theme) => ({\r\n    markerContainer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: \"calc(100% - 10px)\", // This subtraction corresponds to the padding of the parent\r\n        padding: 5,\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    iconSelect: {\r\n        zIndex: 3,\r\n        height: 80,\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-evenly\",\r\n        width: \"100%\",\r\n    },\r\n    iconDisplay: {\r\n        height: 30,\r\n        width: 30,\r\n    },\r\n    iconColorInput: {\r\n        width: 40,\r\n        height: 40,\r\n    },\r\n    iconList: {\r\n        zIndex: 1,\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n        padding: 5,\r\n    },\r\n    iconListEntry: {\r\n        height: 20,\r\n        width: 20,\r\n    },\r\n    markerHelp: {\r\n        width: \"100%\",\r\n    }\r\n}));\r\n\r\n// Function to run when active entry is updated, this updates the markerData in the mapComponent, then reloads the markers\r\nfunction onUpdateActiveEntry(app, newIndex) {\r\n    app.mapRef.current.updateMarkerData();\r\n}\r\n\r\nfunction onAddEntry(app, index) {\r\n    let currentMarkerData = cloneDeep(app.state.pluginData[\"Marker\"]);\r\n    let newMarkerEntry = null;\r\n    if (index > 0) { // Use new\r\n        newMarkerEntry = cloneDeep(currentMarkerData[index - 1]);\r\n    } else { // Use default\r\n        newMarkerEntry = {};\r\n    }\r\n    currentMarkerData.splice(index, 0, newMarkerEntry);\r\n    return currentMarkerData;\r\n}\r\n\r\nfunction onDeleteEntry(app, index) {\r\n    let currentMarkerData = cloneDeep(app.state.pluginData[\"Marker\"]);\r\n    currentMarkerData.splice(index, 1);\r\n    return currentMarkerData;\r\n\r\n}\r\n\r\n// Icon selection component\r\nfunction IconSelector(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(anchorEl ? null : event.currentTarget);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? 'simple-popper' : undefined;\r\n\r\n    const Icon = props.value;\r\n\r\n    const iconChoices = markerIcons.map((MarkerIcon, index) => (\r\n        <MarkerIcon\r\n            key={index}\r\n            className={classes.iconListEntry}\r\n            style={{color:props.color}}\r\n            onClick={() => {\r\n                props.updateIconIndex(index);\r\n                handleClick();\r\n            }}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <Icon className={classes.iconDisplay} style={{ color: props.color }} onClick={handleClick}/>\r\n            <Popper className={classes.iconList} id={id} open={open} anchorEl={anchorEl} disablePortal>\r\n                <Grid>\r\n                    {iconChoices}\r\n                </Grid>\r\n            </Popper>\r\n        </div>\r\n    )\r\n}\r\n\r\n// Marker component\r\nfunction MarkerPluginComponent(props) {\r\n    const classes = useStyles();\r\n    const [color, setColor] = React.useState(\"#bf4340\");// Default color of icons\r\n    const [iconIndex, setIconIndex] = React.useState(0);// Defaults to first icon in list\r\n\r\n    const Icon = markerIcons[iconIndex];\r\n\r\n    return (\r\n        <div id=\"marker_panel\" className={classes.markerContainer}>\r\n            <Typography className={classes.markerHelp} align=\"left\" variant=\"caption\">Choose icon: click icon</Typography>\r\n            <Typography className={classes.markerHelp} align=\"left\" variant=\"caption\">Choose color: click rectangle.</Typography>\r\n            <Typography className={classes.markerHelp} align=\"left\" variant=\"caption\">Drag icon: click and hold.</Typography>\r\n            <Typography className={classes.markerHelp} align=\"left\" variant=\"caption\">Remove icon or view/edit its tooltip: click icon on the map.</Typography>\r\n            <div className={classes.iconSelect}>\r\n                <IconSelector value={Icon} color={color} updateIconIndex={setIconIndex}/>\r\n                <Input className={classes.iconColorInput} value={color} type=\"color\" onChange={e => setColor(e.target.value)} />\r\n            </div>\r\n            <Button onClick={() => {\r\n                const center = props.app.mapRef.current.mapElement.getBounds().getCenter();\r\n                props.app.mapRef.current.addMarker(iconIndex, color, center.lat, center.lng, \"This is editable.\");\r\n            }}>\r\n                Add\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst initState = scenarioData => {\r\n    let retval = [];\r\n    let i;\r\n    for (i = 0; i < scenarioData.length; i++) {\r\n        retval.push({});\r\n    }\r\n    return retval;\r\n};\r\n\r\nconst MarkerPluginDict = {\r\n    component: MarkerPluginComponent,\r\n    initState: initState,\r\n    help: \"For adding colored markers to the map.\",\r\n    functions: {\r\n        onUpdateActiveEntry: onUpdateActiveEntry,\r\n        onAddEntry: onAddEntry,\r\n        onDeleteEntry: onDeleteEntry,\r\n    }\r\n};\r\n\r\nexport default MarkerPluginDict;","// This is where to import the individual plugins, i.e. this is the list of plugins you wish to add to the app toolmenu\r\n// For sake of consistency, it is recommended to save the plugin component files in src/plugins; but of course you can save it anywhere you like and import it to this js file\r\nimport LegendPlugin from './plugins/LegendPlugin.js'; // Naming the plugins with Component is not required, it could have well been just Legend, given the source plugin file is named as such, having Plugin in the name is just due to personal preferences\r\nimport RegionInfoPlugin from './plugins/RegionInfoPlugin.js';\r\nimport AltHistEditorLoaderPlugin from './plugins/AltHistEditorLoaderPlugin.js';\r\nimport ScenarioPlugin from './plugins/ScenarioPlugin.js';\r\nimport CustomGeoJSONLoaderPlugin from './plugins/CustomGeoJSONLoaderPlugin.js';\r\nimport ThemePlugin from './plugins/ThemePlugin.js';\r\nimport MarkerPlugin from './plugins/MarkerPlugin';\r\n\r\n// All imported plugins above should then be listed below with their names, which will serve as the title in the plugins menu\r\n// Names of plugins should be unique as they will also serve as keys to the accordion element\r\n// See LegendPlugin.js for example of plugin and the requirements of it \r\n// The ordering of plugins here also determine the order of plugin display in the app\r\nconst plugins = {\r\n    \"Region Info\": RegionInfoPlugin,\r\n    \"Legend\": LegendPlugin,\r\n    \"Marker\": MarkerPlugin,\r\n    \"Scenario\": ScenarioPlugin,\r\n    \"Theme\": ThemePlugin,\r\n    \"Alt Hist Editor Loader\": AltHistEditorLoaderPlugin, \r\n    \"Custom GeoJSON Loader\": CustomGeoJSONLoaderPlugin,\r\n};\r\n\r\nexport default plugins;","import React, { useDebugValue } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport plugins from \"../appPlugins.js\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Scrollbars from 'react-custom-scrollbars';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\n// Import retract button custom component\r\nimport RetractButton from './RetractButton.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    pluginMenuContainer: {\r\n        position: \"absolute\",\r\n        right: 0,\r\n        bottom: 80,\r\n        zIndex: 1,\r\n        minWidth: 140, // At least 150px adding in padding\r\n        width: \"12%\",\r\n        minHeight: 170, // At least 180px adding in padding\r\n        height: \"60%\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"stretch\",\r\n        padding: 3,\r\n        transform: \"translate(0%, -50%)\",\r\n        borderTopStyle: \"ridge\",\r\n        borderBottomStyle: \"ridge\",\r\n        borderLeftStyle: \"ridge\",\r\n        borderColor: theme.palette.border,\r\n        backgroundImage: theme.palette.backgroundImage.main,\r\n        WebkitBorderImage: theme.palette.borderImage\r\n    },\r\n    accordionContainer: {\r\n        paddingRight: 10,\r\n        paddingLeft: 10,\r\n    },\r\n    accordionSummary: {\r\n        paddingTop: 0,\r\n        paddingBottom: 0,\r\n    },\r\n    accordionDetails: {\r\n        padding: 0,\r\n    },\r\n    accordionHelp: {\r\n        marginLeft: 5,\r\n    }\r\n}));\r\n\r\nexport default function PluginMenuComponent(props) {\r\n    const classes = useStyles();\r\n    const [display, setDisplay] = React.useState(true);\r\n    let accordionItems = [];\r\n    for (const [name, value] of Object.entries(plugins)) {\r\n        const Plugin = value.component;\r\n        accordionItems.push(\r\n            <Accordion defaultExpanded key={name} square>\r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} className={classes.accordionSummary} IconButtonProps={{ size: \"small\" }}>\r\n                    <Typography variant=\"body2\">{name}</Typography>\r\n                    <Tooltip\r\n                        title={value.help}\r\n                    >\r\n                        <div className={classes.accordionHelp}>\r\n                            <HelpOutlineIcon fontSize=\"small\"/>\r\n                        </div>\r\n                    </Tooltip>\r\n                </AccordionSummary>\r\n                <AccordionDetails className={classes.accordionDetails}>\r\n                    <Plugin app={props.app} />\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        );\r\n    }\r\n    return (\r\n        <Slide direction=\"left\" in={display} unmountOnExit={false} mountOnEnter={false}>\r\n            <div className={classes.pluginMenuContainer} id=\"plugin_menu\">\r\n                <Scrollbars>\r\n                    <div className={classes.accordionContainer}>\r\n                        {accordionItems}\r\n                    </div>\r\n                </Scrollbars>\r\n                <RetractButton direction=\"right\" top={\"50%\"} left={-6} checked={display} onClick={() => setDisplay(!display)} />\r\n            </div>\r\n        </Slide>\r\n    );\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    addIconButtonContainer: {\r\n        position: \"absolute\",\r\n        top: -12,\r\n        padding: 0,\r\n        zIndex: 1,\r\n        transform: \"scale(0.8)\"\r\n    },\r\n    addIconButton: {\r\n        padding: 0,\r\n        zIndex: 2,\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\nexport default function TimelineAddButton(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <div className={classes.addIconButtonContainer} style={{left : props.themeDict.timelineMarkerSpacing/2 + 16}}>\r\n                <IconButton size=\"small\" className={classes.addIconButton} onClick={() => { props.addEntry(props.index + 1); }}>\r\n                    {/*This is the fake button for visuals only*/}\r\n                    <AddIcon></AddIcon>\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n}","// Import packages\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TimelineAddButton from './TimelineAddButton.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    timelineMarker: {\r\n        position: \"absolute\",\r\n        top: 15,\r\n        zIndex: 2,\r\n        transform: \"scale(0.8)\",\r\n    },\r\n    entryButton: {\r\n        color: theme.palette.text.primary,\r\n        padding: 0,\r\n    },\r\n    markerLabel: {\r\n        position: \"absolute\",\r\n        top: -20,\r\n        left: \"50%\",\r\n        textAlign: \"center\",\r\n        textOverflow: \"ellipsis\",\r\n        overflow: \"hidden\",\r\n        whiteSpace: \"nowrap\",\r\n        color: theme.palette.text.primary\r\n    },\r\n}));\r\n\r\nexport default function TimelineMarker(props) {\r\n    const classes = useStyles();\r\n    const icon = props.selected ? <RadioButtonCheckedIcon/> : <RadioButtonUncheckedIcon/>;\r\n    return (\r\n        <div className={classes.timelineMarker} style={{left: (props.index+1)*props.themeDict.timelineMarkerSpacing}}>\r\n            {/*props.index+1 as we wish to add after the current entry*/}\r\n            <Typography\r\n                className={classes.markerLabel}\r\n                variant=\"body2\"\r\n                style={{\r\n                    width:props.themeDict.timelineMarkerLabelWidth,\r\n                    marginLeft:-props.themeDict.timelineMarkerLabelWidth/2,\r\n                }}\r\n            >\r\n            {props.label}\r\n            </Typography>\r\n            <TimelineAddButton themeDict={props.themeDict} addEntry={props.addEntry} index={props.index}/>\r\n            <IconButton className={classes.entryButton} size=\"small\" onClick={() => {props.updateActiveEntry(props.index);}}>\r\n                {icon}\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","// Import packages\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n\r\n// Import custom components\r\nimport TimelineMarker from './TimelineMarker.js';\r\n\r\n// Import script\r\nimport useWindowSize from '../scripts/useWindowSize.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    timelineBarContainer: {\r\n        position: \"absolute\",\r\n        width: \"100%\",\r\n        height: 45, // If this is adjusted, need to adjust the height of the map element and event component as well so that the top of the timeline meets the bottom of the map\r\n        bottom: 0,\r\n        overflow: \"hidden\",\r\n        zIndex: 2,\r\n        borderTopStyle: \"ridge\",\r\n        borderColor: theme.palette.border,\r\n        backgroundImage: theme.palette.backgroundImage.main,\r\n        WebkitBorderImage: theme.palette.borderImage\r\n    },\r\n    timelineLine: {\r\n        position: \"absolute\",\r\n        top: 26,\r\n        left: 0,\r\n        height: 2,\r\n        backgroundColor: theme.palette.text.primary,\r\n    },\r\n    timelineBarContentContainer: {\r\n        display: \"relative\",\r\n        height: \"100%\",\r\n    },\r\n    timelineBarMarkerContainer: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n    }\r\n}));\r\n\r\nexport default function TimelineBarComponent(props) {\r\n    const classes = useStyles();\r\n    const markers = props.scenarioData.map((entry, index) =>\r\n        <TimelineMarker key={index} index={index} label={entry.date} selected={props.activeEntry === index} updateActiveEntry={props.updateActiveEntry} addEntry={props.addEntry} themeDict={props.themeDict} />\r\n    )\r\n    const [width, height] = useWindowSize(); // Values that change whenever window is resized, height is not used for now TODO: get rid of height part if performacne suffers, else overhead I guess is fine\r\n    const lineLength = Math.max(width, (props.scenarioData.length + 1) * props.themeDict.timelineMarkerSpacing); // Take the larger of the viewport width and the length required to fit the timeline markers as the length of the timeline TODO: the issue of what I've done here is that the right end and the left end of the timeline won't match up in length when the second line length case in the max arguments is triggered, not too important, but fix it if possible\r\n    return (\r\n        <div className={classes.timelineBarContainer} id=\"timeline_bar\">\r\n            <Scrollbars className={classes.timelineBarContentContainer}>\r\n                <div className={classes.timelineBarContentContainer}>\r\n                    <div className={classes.timelineLine} style={{ width: lineLength }}></div>\r\n                    <div className={classes.timelineBarMarkerContainer} style={{ width: lineLength }}>\r\n                        {markers}\r\n                    </div>\r\n                </div>\r\n            </Scrollbars>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\n// Function for listener on windows resize\r\nexport default function useWindowSize() {\r\n    const [size, setSize] = React.useState([0, 0]);\r\n    React.useLayoutEffect(() => {\r\n        function updateSize() {\r\n            setSize([window.innerWidth, window.innerHeight]);\r\n        }\r\n        window.addEventListener('resize', updateSize);\r\n        updateSize();\r\n        return () => window.removeEventListener('resize', updateSize);\r\n    }, []);\r\n    return size;\r\n}","// Import React\r\nimport React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n// Import retract button custom component\r\nimport RetractButton from './RetractButton.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    eventContainer: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        bottom: 48, // This value should be such that the event box touches the timeline bar on the bottom, so adjust accordingly\r\n        minWidth: 140, // At least 150px adding in padding\r\n        width: \"20%\",\r\n        minHeight: 190, // At least 200px adding in padding\r\n        height: \"30%\",\r\n        zIndex: 1,\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"stretch\",\r\n        padding: 5,\r\n        borderRightStyle: \"ridge\",\r\n        borderTopStyle: \"ridge\",\r\n        borderColor: theme.palette.border,\r\n        backgroundImage: theme.palette.backgroundImage.main,\r\n        WebkitBorderImage: theme.palette.borderImage\r\n    },\r\n    eventBar: {\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        backgroundImage: theme.palette.backgroundImage.main\r\n    },\r\n    eventButtonHolder: {\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    eventContent: {\r\n        marginTop: 5,\r\n        flexGrow: 1,\r\n        resize: \"none\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        color: theme.palette.text.primary,\r\n    },\r\n    eventButton: {\r\n        fontSize: 10,\r\n        margin: 2,\r\n    },\r\n    dateInput: {\r\n        width: \"max(calc(100% - 40px),)\",\r\n        margin: 10,\r\n    }\r\n}));\r\n\r\nfunction TimelineEventComponent(props) {\r\n    const classes = useStyles();\r\n    const [display, setDisplay] = React.useState(true);\r\n    return (\r\n        <Slide direction=\"right\" in={display} unmountOnExit={false} mountOnEnter={false}>\r\n            <div className={classes.eventContainer} id=\"timeline_event\">\r\n                <div className={classes.eventBar}>\r\n                    <TextField size=\"small\" label=\"Date\" margin=\"dense\" value={props.date} onChange={e => { props.updateEventDate(e.target.value) }} className={classes.dateInput}></TextField>\r\n                    <div className={classes.eventButtonHolder}>\r\n                        <Button variant=\"contained\" size=\"small\" color=\"primary\" onClick={() => { props.clearEntry(); }} className={classes.eventButton}>Clear</Button>\r\n                        <Button variant=\"contained\" size=\"small\" color=\"secondary\" onClick={() => { props.deleteEntry(props.activeEntry); }} disabled={props.oneEntryLeft} className={classes.eventButton}>Delete</Button>\r\n                        {/*Delete button is disabled for the first entry TODO: because for now we haven't implemented the add entry before first element functionality yet, nor is there a button for it*/}\r\n                    </div>\r\n                </div>\r\n                <textarea className={classes.eventContent} value={props.event} onChange={e => { props.updateEvent(e.target.value) }} multiline=\"true\"></textarea>\r\n                <RetractButton direction=\"left\" top={\"50%\"} left={\"calc(100% + 6px)\"} checked={display} onClick={() => setDisplay(!display)} />\r\n            </div>\r\n        </Slide>\r\n    );\r\n}\r\n\r\nexport default React.memo(TimelineEventComponent);","export default __webpack_public_path__ + \"static/media/MarbleTexture.1cb26e16.jpg\";","export default __webpack_public_path__ + \"static/media/GoldTexture.302ee534.png\";","import MarbleTexture from '../assets/img/MarbleTexture.jpg';\r\nimport GoldTexture from '../assets/img/GoldTexture.png';\r\n\r\n// Colors should be given in hex\r\nconst themeDict = {\r\n    material: { // Theme object for material ui theming component FIXME: add corresponding use themeprovider thing to the app js\r\n        palette: {\r\n            type: \"dark\",\r\n            secondary: {\r\n                main: \"#d50000\",\r\n                light: \"#ff5131\",\r\n                dark: \"#9b0000\"\r\n            },\r\n            border: \"#d4af37\",\r\n            borderImage: `url(${GoldTexture}) 30`,\r\n            background: {\r\n                light: \"#F5F5F5\",\r\n            },\r\n            backgroundImage: {\r\n                main: `url(${MarbleTexture})`,\r\n            }\r\n        },\r\n    },\r\n    other: { // Theme object for map (currently done via cesium) to use, this is passed down as props to all child\r\n        polyStrokeColor: \"#36454F\",\r\n        polyStrokeWeight: 0.5,\r\n        polyFillColorDefault: \"#DCDCDC\",\r\n        polyFillOpacityDefault: 0.2,\r\n        polyFillOpacityColored: 0.6,\r\n        polyFillOpacityHovered: 0.9,\r\n        timelineMarkerSpacing: 120,\r\n        timelineMarkerLabelWidth: 100,\r\n        markerSize: 30,\r\n    }\r\n\r\n}\r\n\r\nexport default themeDict;","// Given geoJson with features (here assume regions, i.e. polygons/multipolygons) each with properties regionID and color and label\r\n// Generate a js object with keys as the regionID and value as object of the properties of the regions\r\nexport default function createRegionDict(geoJson) {\r\n    let retval = {};\r\n    geoJson.features.forEach(region => {\r\n        retval[region.properties.regionID] = { // TODO: get rid of object, change code elsewhre as well so it only has the value color, no need to object\r\n            color: null, // expects a hex string, or if null takes the default fill color as specified in theme\r\n        };\r\n    });\r\n    return retval;\r\n}","import React from 'react';\r\n\r\nconst steps = [\r\n    {\r\n        target: 'body',\r\n        content: \r\n        <React.Fragment>\r\n            <p>FAQ: Removing borders: set region border width to 0 in theme panel on the right</p>\r\n            <hr/>\r\n            <p>Welcome to Making History Sandbox! Click next for the tutorial.</p>\r\n            <hr/>\r\n            <p>***NEW FEATURES***</p>\r\n            <p>Adding markers to the map with tooltips (can open multiple at the same time) and custom colors, see side panel</p>\r\n            <p>Map region theme customizability, including region border thickness (polyStrokeWeight), fill opacity, etc.</p>\r\n            <hr/>\r\n            <p>If you are willing to share you scenario, feel free to send it to Yulin-W@outlook.com. If you want attribution, send the name you want as well.</p>\r\n            <hr/>\r\n            <p>Making custom regions: <a href=\"https://github.com/Yulin-W/making-history-sandbox/blob/main/customRegionTutorial.md\" target=\"_blank\">Custom Region Tutorial</a></p>\r\n            <hr/>\r\n            <p>See acknowledgements at the end of the tutorial</p>\r\n            <p><a href=\"https://github.com/Yulin-W/making-history-sandbox\">Github</a></p>\r\n        </React.Fragment>,\r\n        placement: 'center'\r\n    },\r\n    {\r\n        target: '#colorbar',\r\n        content: 'Choose your color using the various methods provided, for instance the slider or the RGB input.'\r\n    },\r\n    {\r\n        target: '#toolbar',\r\n        content: 'Use erase for removing colors, lasso for mass colouring, and pick for picking colors from the map.'\r\n    },\r\n    {\r\n        target: '#map',\r\n        content: 'This is the map. To color/erase color, click the region. Or, if lasso is used, click and hold to select regions.',\r\n    },\r\n    {\r\n        target: '.leaflet-control-layers',\r\n        content: 'This is where you change the background map and switch on/off the regions.'\r\n    },\r\n    {\r\n        target: '#timeline_bar',\r\n        content: 'This is the timeline. To add a timepoint, click the + in intended position. The added timepoint will inherit the region colors of the preceding timepoint. To go to a timepoint, click on it.',\r\n    },\r\n    {\r\n        target: '#timeline_event',\r\n        content: 'This is where you edit the date label and event description of the timepoint. Clear empties the date/event entry (not the map colors though). Delete removes the current timepoint.',\r\n    },\r\n    {\r\n        target: '#plugin_menu',\r\n        content: \"This is where additional functionalities are, we'll just mention a few.\",\r\n    },\r\n    {\r\n        target: '#theme_panel',\r\n        content: 'Adjust various theming options here; notably, polyStrokeWeight decides region border width, and poly in general refers to the polygons of the map.',\r\n    },\r\n    {\r\n        target: '#geojson_loader',\r\n        content: 'Load your custom region file or save here, for tutorial see https://github.com/Yulin-W/making-history-sandbox/blob/main/customRegionTutorial.md',\r\n    },\r\n    {\r\n        target: '#menu',\r\n        content: 'This is the menu bar. I guess there is not much to say.'\r\n    },\r\n    {\r\n        target: 'body',\r\n        content: <React.Fragment>\r\n            <p>Acknowledgements</p>\r\n            <p>\"mapAdmin.json\" (geojson basemap for the regions) was modified from: Natural Earth. Free vector and raster map data @ naturalearthdata.com.</p>\r\n            <p>Community contributed scenarios: Thanks to the following members of the community for these scenarios:</p>\r\n            <p>2021 Modern Map, by DawnbreakZ</p>\r\n        </React.Fragment>,\r\n        placement: 'center'\r\n    }\r\n]\r\nexport default steps;","// Import React and other modules\r\nimport React from \"react\";\r\nimport { createMuiTheme, ThemeProvider, withStyles } from '@material-ui/core/styles';\r\n\r\n// Import css\r\nimport './App.css';\r\n\r\n// Import custom components\r\nimport MenuComponent from \"./components/MenuComponent.js\";\r\nimport MapComponent from './components/MapComponent.js';\r\nimport ColorBarComponent from './components/ColorBarComponent.js';\r\nimport ToolbarComponent from \"./components/ToolbarComponent.js\";\r\nimport PluginMenuComponent from \"./components/PluginMenuComponent.js\";\r\nimport TimelineBarComponent from './components/TimelineBarComponent.js';\r\nimport TimelineEventComponent from './components/TimelineEventComponent.js';\r\n\r\n// Import default themeDict\r\nimport themeDict from './themes/default';\r\n\r\n// Import default basemap geojson\r\nimport mapAdmin from \"./assets/basemap/mapAdmin.json\"; // This is the only default map for the app\r\n\r\n// Import scripts\r\nimport createRegionDict from './scripts/createRegionDict.js';\r\nimport createScenarioEntry from './scripts/createScenarioEntry.js';\r\nimport saveScenario from './scripts/saveScenario.js';\r\n\r\n// Import plugins\r\nimport plugins from \"./appPlugins.js\";\r\n\r\n// Import deep clone\r\nimport cloneDeep from \"clone-deep\";\r\n\r\n// Import react-joyride\r\nimport ReactJoyride, { EVENTS } from 'react-joyride';\r\nimport steps from './assets/other/joyrideSteps.js';\r\n\r\n// Import Google Analytics\r\nimport ReactGA from 'react-ga';\r\n\r\n// Setup Google Analytics\r\nReactGA.initialize(\"UA-176706567-4\");\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nconst theme = createMuiTheme(themeDict.material);\r\n\r\nconst useStyles = theme => ({\r\n});\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Declare some constant attributes\r\n    this.baseMap = mapAdmin;\r\n    this.mapKey = \"mapAdmin\";\r\n    this.themeDictDefault = themeDict;\r\n\r\n    // Convert baseMap to a prototype, const dictionary indexed by regionID\r\n    this.regionDictDefault = createRegionDict(this.baseMap);\r\n    this.scenarioDataDefault = [\r\n      createScenarioEntry(this.regionDictDefault, \"2000 January 1\", \"An Event\"), // Default is 2 entry with the default regionDict, empty date and event entry\r\n      createScenarioEntry(this.regionDictDefault, \"2010 January 1\", \"Another Event\"),\r\n    ];\r\n\r\n    this.plugins = plugins;\r\n    // Default values should ideally all be based off the scenarioDataDefault\r\n    // Setup default state values\r\n    let pluginData = {};\r\n    for (const [name, entry] of Object.entries(this.plugins)) {\r\n      pluginData[name] = entry.initState(this.scenarioDataDefault);\r\n    }\r\n\r\n    let colorData = [];\r\n    let i;\r\n    for (i = 0; i < this.scenarioDataDefault.length; i++) {\r\n      colorData.push({});\r\n    }\r\n\r\n    // Set initial state\r\n    this.state = {\r\n      themeDict: this.themeDictDefault,\r\n      scenarioData: this.scenarioDataDefault, // Array of information for the scenarios\r\n      pluginData: pluginData, // Create object for data in plugin indexed by name of plugin\r\n      colorData: colorData, // Dictionary with corresponding entries to scenarioData, that records the number of regions of specific color for the scenario timeline entry\r\n      activeEntry: 0, // index of currently active on map entry in scenarioData\r\n      lassoSelecting: false, // state for whether lasso select tool is activated\r\n      erasing: false, // state for whether eraser tool is activated\r\n      helpOn: true, // On opening app, defaults to have help on\r\n      picking: false, // color picking tool defaults to not on\r\n      mapKey: this.mapKey, // This is here both as a state and to act as a trigger for MapComponent and App overall to rerender upon loading in a new GeoJSON, it should only be modified by CustomGeoJSONLoaderPlugin\r\n    };\r\n\r\n    // Numerous refs\r\n    this.colorBarRef = React.createRef(null);\r\n    this.mapRef = React.createRef(null);\r\n\r\n    // Bind this to methods\r\n    this.getColor = this.getColor.bind(this);\r\n    this.assignRegions = this.assignRegions.bind(this);\r\n    this.updateActiveEntry = this.updateActiveEntry.bind(this);\r\n    this.addEntry = this.addEntry.bind(this);\r\n    this.updateEventDate = this.updateEventDate.bind(this);\r\n    this.updateEvent = this.updateEvent.bind(this);\r\n    this.deleteEntry = this.deleteEntry.bind(this);\r\n    this.updatePluginData = this.updatePluginData.bind(this);\r\n    this.updateMultiPluginData = this.updateMultiPluginData.bind(this);\r\n    this.clearEntry = this.clearEntry.bind(this);\r\n    this.loadSave = this.loadSave.bind(this);\r\n    this.updateLassoSelecting = this.updateLassoSelecting.bind(this);\r\n    this.updateErasing = this.updateErasing.bind(this);\r\n    this.setColorBarColor = this.setColorBarColor.bind(this);\r\n    this.processRegionHoveredOn = this.processRegionHoveredOn.bind(this);\r\n    this.processRegionHoveredOut = this.processRegionHoveredOut.bind(this);\r\n    this.save = this.save.bind(this);\r\n    this.getRegionColorByIndex = this.getRegionColorByIndex.bind(this);\r\n    this.updatePicking = this.updatePicking.bind(this);\r\n    this.resetAppBasedOnBasemap = this.resetAppBasedOnBasemap.bind(this);\r\n    this.runPluginFunc = this.runPluginFunc.bind(this)\r\n    this.handleJoyrideCallback = this.handleJoyrideCallback.bind(this);\r\n    this.updateMarkerData = this.updateMarkerData.bind(this);\r\n    this.getMarkerData = this.getMarkerData.bind(this);\r\n    this.initUndefinedPluginData = this.initUndefinedPluginData.bind(this);\r\n  }\r\n\r\n  // Returns pluginData for marker of current activeEntry\r\n  getMarkerData() {\r\n    return this.state.pluginData[\"Marker\"][this.state.activeEntry];\r\n  }\r\n\r\n  // Updates pluginData for marker update of current activeEntry\r\n  updateMarkerData(markerData) {\r\n    let currentData = cloneDeep(this.state.pluginData[\"Marker\"]);\r\n    currentData[this.state.activeEntry] = markerData;\r\n    this.updatePluginData(\"Marker\", currentData);\r\n  }\r\n\r\n  // Runs functions entry in plugin of specified key, supplies the args to the function called in addition to the this argument, and also returns a list of the return values of the functions that did return values\r\n  runPluginFunc(key, args) {\r\n    let retval = {};\r\n    Object.entries(this.plugins).forEach(entry => {\r\n      if (key in entry[1].functions) {\r\n        const val = entry[1].functions[key](this, ...args);\r\n        if (val) {\r\n          retval[entry[0]] = val;\r\n        }\r\n      }\r\n    });\r\n    return retval;\r\n  }\r\n\r\n  // Resets app based on basemap, in particular the key states, including scenariodata, colorData, pluginData\r\n  resetAppBasedOnBasemap(baseMap, mapKey, callback = null) {\r\n    // This part is the same as from the app constructor TODO: try to alter so to promode code reuse\r\n    this.baseMap = baseMap;\r\n    this.mapKey = mapKey;\r\n    // Some attributes for plugins to use\r\n    // Convert baseMap to a prototype, const dictionary indexed by regionID\r\n    this.regionDictDefault = createRegionDict(this.baseMap);\r\n    this.scenarioDataDefault = [\r\n      createScenarioEntry(this.regionDictDefault, \"2000 January 1\", \"An Event\"), // Default is 2 entry with the default regionDict, empty date and event entry\r\n      createScenarioEntry(this.regionDictDefault, \"2010 January 1\", \"Another Event\"),\r\n    ];\r\n\r\n    this.plugins = plugins;\r\n    // Default values should ideally all be based off the scenarioDataDefault\r\n    // Setup default state values\r\n    let pluginData = {};\r\n    for (const [name, entry] of Object.entries(this.plugins)) {\r\n      pluginData[name] = entry.initState(this.scenarioDataDefault);\r\n    }\r\n\r\n    let colorData = [];\r\n    let i;\r\n    for (i = 0; i < this.scenarioDataDefault.length; i++) {\r\n      colorData.push({});\r\n    }\r\n\r\n    // This part is the same as the state setting, but here we use setState instead of directly setting, only difference is that helpOn here is not switched on as users would have seen it already\r\n    this.setState({\r\n      // Themedict is not reset to default, the existing themeDict settings will continue to be used\r\n      scenarioData: this.scenarioDataDefault,\r\n      pluginData: pluginData,\r\n      colorData: colorData,\r\n      activeEntry: 0,\r\n      lassoSelecting: false,\r\n      erasing: false,\r\n      helpOn: false, // This is different from the initial initialization state value\r\n      picking: false,\r\n      mapKey: this.mapKey,\r\n    }, () => {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    })\r\n  }\r\n\r\n  // Update color picker state\r\n  updatePicking(newState, callback = null) {\r\n    this.setState({ picking: newState }, () => {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  processRegionHoveredOn(layer) {\r\n    // Running plugin methods\r\n    this.runPluginFunc(\"onProcessRegionHoveredOn\", [layer]);\r\n  }\r\n\r\n  processRegionHoveredOut(layer) {\r\n    // Running plugin methods\r\n    this.runPluginFunc(\"onProcessRegionHoveredOut\", [layer]);\r\n  }\r\n\r\n  // Updates plugin data for the specified plugin with the specified data, the key should be the one used in the plugins dictionary\r\n  updatePluginData(key, data, callback=null) {\r\n    let currentData = cloneDeep(this.state.pluginData);\r\n    currentData[key] = data;\r\n    this.setState({ pluginData: currentData }, () => {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  // This is needed to prevent bugs occurring when multiple plugin data updates are called close to each other and resulting in state update not as fast as one would wish\r\n  updateMultiPluginData(dataDict, callback=null) {\r\n    let currentData = cloneDeep(this.state.pluginData);\r\n    for (const [key, data] of Object.entries(dataDict)) {\r\n      currentData[key] = data;\r\n    }\r\n    this.setState({ pluginData: currentData }, () => {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Updates lasso selecting, expects true/false boolean value, then runs callback if any\r\n  updateLassoSelecting(newState, callback = null) {\r\n    this.setState({ lassoSelecting: newState }, () => {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Update eraser state, such state in turn determins the value getColor returns\r\n  updateErasing(newState, callback = null) {\r\n    this.setState({ erasing: newState }, () => {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Returns hex of currently selected color, as in the colorBarComponent\r\n  getColor() {\r\n    return this.state.erasing ? null : this.colorBarRef.current.state.color;\r\n  }\r\n\r\n  // Sets color in colorBarComponent, expects a hex string\r\n  setColorBarColor(color) {\r\n    this.colorBarRef.current.setState({ color: color });\r\n  }\r\n\r\n  // Adds entry in position at specified index in scenarioData and colorData, new entry has no date nor event\r\n  addEntry(index) {\r\n    let currentData = cloneDeep(this.state.scenarioData);\r\n    let currentColorData = cloneDeep(this.state.colorData);\r\n    let newRegionDict = null;\r\n    let newColorEntry = null;\r\n    if (index > 0) { // use the regionDict, color entry of the previous entry as the starting spot\r\n      newRegionDict = createScenarioEntry(currentData[index - 1].regionDict);\r\n      newColorEntry = cloneDeep(currentColorData[index - 1]);\r\n    } else { // use the default regionDict, color entry if we are to insert at the beginning, currently this is not possible as it seems to lead to a multi-rerender yet some code is not ran in app.render scenario, and I get a regionDict undefined thing which I have no idea why; in light of this, I didn't do the add entry button in front of the first entry\r\n      newRegionDict = createScenarioEntry(this.regionDictDefault);\r\n      newColorEntry = {};\r\n    }\r\n    currentData.splice(index, 0, newRegionDict);\r\n    currentColorData.splice(index, 0, newColorEntry);\r\n    this.setState({ scenarioData: currentData, colorData: currentColorData }, () => {\r\n      // Update the plugin data, then in call back update active entry to ensure order of execution\r\n      const retval = this.runPluginFunc(\"onAddEntry\", [index]);\r\n      this.updateMultiPluginData(retval, () => {this.updateActiveEntry(index);});\r\n    });\r\n  }\r\n\r\n  // Deletes entry in position at specified index in scenarioData and colorData\r\n  deleteEntry(index) {\r\n    let currentData = cloneDeep(this.state.scenarioData);\r\n    let currentColorData = cloneDeep(this.state.colorData);\r\n    currentData.splice(index, 1);\r\n    currentColorData.splice(index, 1);\r\n    if (index === this.state.scenarioData.length - 1) {\r\n      // Deleted entry is last entry, hence new entry to be focused on is the entry before the last entry\r\n      let newIndex = index - 1;\r\n      // To avoid possibly access invalid active entry values, we update the activeEntry first, then update the scenarioDict to delete the entry\r\n      this.updateActiveEntry(newIndex, () => {\r\n        this.setState({ scenarioData: currentData, colorData: currentColorData }, () => {\r\n          const retval = this.runPluginFunc(\"onDeleteEntry\", [index]);\r\n          this.updateMultiPluginData(retval);\r\n        });\r\n      }) // Note reset style is included in the updateActiveEntry function already\r\n    } else {\r\n      // Deleted entry was not the last entry, hence new entry to be focused on is the entry after the deleted entry, i.e. activeEntry index need not change\r\n      this.setState({ scenarioData: currentData, colorData: currentColorData }, () => {\r\n        const retval = this.runPluginFunc(\"onDeleteEntry\", [index]);\r\n        this.updateMultiPluginData(retval, () => {\r\n          this.mapRef.current.resetAllRegionStyle();\r\n        });\r\n      });\r\n    }\r\n\r\n    // Running plugin methods\r\n    this.runPluginFunc(\"onDeleteEntry\", [index]);\r\n  }\r\n\r\n  // Updates event date for active entry, expects a string argument\r\n  updateEventDate(date) {\r\n    let currentData = cloneDeep(this.state.scenarioData);\r\n    currentData[this.state.activeEntry].date = date;\r\n    this.setState({ scenarioData: currentData });\r\n\r\n    // Running plugin methods\r\n    this.runPluginFunc(\"onUpdateEventDate\", [date]);\r\n  }\r\n\r\n  // Updates event description for active entry, expects a string argument\r\n  updateEvent(event) {\r\n    let currentData = cloneDeep(this.state.scenarioData);\r\n    currentData[this.state.activeEntry].event = event;\r\n    this.setState({ scenarioData: currentData });\r\n\r\n    // Running plugin methods\r\n    this.runPluginFunc(\"onUpdateEvent\", [event]);\r\n  }\r\n\r\n  // Clears date and event of the current active entry, not the map though\r\n  clearEntry() {\r\n    let currentData = cloneDeep(this.state.scenarioData);\r\n    currentData[this.state.activeEntry].event = \"\";\r\n    currentData[this.state.activeEntry].date = \"\";\r\n    this.setState({ scenarioData: currentData });\r\n  }\r\n\r\n  // Updates index for active entry\r\n  updateActiveEntry(newIndex, callback = null) {\r\n    this.setState(\r\n      { activeEntry: newIndex },\r\n      () => {\r\n        this.mapRef.current.resetAllRegionStyle();\r\n        this.runPluginFunc(\"onUpdateActiveEntry\", [newIndex]);\r\n        if (callback) { // runs callback if callback is not null\r\n          callback();\r\n        }\r\n      });\r\n  }\r\n\r\n  // Assigns regions of specified indices the currently selected color and update colorData accordingly, then run callback if any\r\n  assignRegions(indices, callback = null) {\r\n    const color = this.getColor();\r\n\r\n    // Modifying the new data before setting it as the state\r\n    let currentData = cloneDeep(this.state.scenarioData);\r\n    let currentColorData = cloneDeep(this.state.colorData);\r\n    let removedColors = [];\r\n    let addedColor = false;\r\n\r\n    indices.forEach(index => {\r\n      const previousColor = currentData[this.state.activeEntry].regionDict[index].color;\r\n      // Update for scenarioData the color of the region\r\n      currentData[this.state.activeEntry].regionDict[index].color = color;\r\n\r\n      // Only need to update if the previousColor is different from current color\r\n      if (previousColor !== color) {\r\n        // Deal with decrementing previous color's colorData entry, if any\r\n        if (previousColor) {\r\n          currentColorData[this.state.activeEntry][previousColor] -= 1;\r\n          if (currentColorData[this.state.activeEntry][previousColor] === 0) {\r\n            // If the assigning took the count of regions of the color to 0, then remove it from the colorData\r\n            delete currentColorData[this.state.activeEntry][previousColor];\r\n            removedColors.push(previousColor);\r\n          }\r\n        }\r\n\r\n        // Deal with incrementing or creating entry for added color's colorData entry, if any\r\n        if (color) {\r\n          if (color in currentColorData[this.state.activeEntry]) {\r\n            currentColorData[this.state.activeEntry][color] += 1;\r\n          } else {\r\n            currentColorData[this.state.activeEntry][color] = 1;\r\n            addedColor = true;\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    // Setting state, then do callback\r\n    this.setState({ scenarioData: currentData, colorData: currentColorData },\r\n      () => {\r\n        this.mapRef.current.resetSpecifiedRegionStyle(indices);\r\n        if (callback) {\r\n          callback();\r\n        }\r\n\r\n        // Running plugin methods\r\n        this.runPluginFunc(\"onAssignRegions\", [indices, color, removedColors, addedColor]);\r\n      });\r\n  }\r\n\r\n  // Saves the currently loaded scenario\r\n  save() {\r\n    saveScenario({\r\n      scenarioData: this.state.scenarioData,\r\n      colorData: this.state.colorData,\r\n      pluginData: this.state.pluginData,\r\n    });\r\n  }\r\n\r\n  // Filling undefined entries of pluginData to appropriate initialization states if necessary such that plugins may all function\r\n  initUndefinedPluginData(callback = null) {\r\n    let currentPluginData = cloneDeep(this.state.pluginData);\r\n    let pluginData = {};\r\n    for (const [name, entry] of Object.entries(this.plugins)) {\r\n      if (!(name in currentPluginData)) {\r\n        currentPluginData[name] = entry.initState(this.state.scenarioData);\r\n      }\r\n    }\r\n    this.setState({ pluginData: currentPluginData }, () => {\r\n      if (callback) {\r\n        callback();\r\n      }\r\n    });\r\n  }\r\n\r\n  // Loads the specified save file containing scenarioData and pluginData, then sets current active entry to the first one, thereby resetting the region styling as well\r\n  loadSave(saveData) {\r\n    this.setState({ scenarioData: saveData.scenarioData, colorData: saveData.colorData, pluginData: saveData.pluginData }, () => {\r\n      this.initUndefinedPluginData(() => this.updateActiveEntry(0));\r\n    });\r\n\r\n    // Running plugin methods\r\n    this.runPluginFunc(\"onLoadSave\", [saveData]);\r\n  }\r\n\r\n  getRegionColorByIndex(index) {\r\n    // Return color hex, or null if that was the value\r\n    return this.state.scenarioData[this.state.activeEntry].regionDict[index].color;\r\n  }\r\n\r\n  // Function for controlling Joyride\r\n  handleJoyrideCallback(data) {\r\n    const { type } = data;\r\n    if (type === EVENTS.TOUR_END && this.state.helpOn) {\r\n      this.setState({ helpOn: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <ReactJoyride\r\n            callback={this.handleJoyrideCallback}\r\n            steps={steps}\r\n            continuous\r\n            disableOverlayClose\r\n            disableCloseOnEsc\r\n            showProgress\r\n            showSkipButton\r\n            run={this.state.helpOn}\r\n            styles={{\r\n              buttonClose: {\r\n                display: \"none\",\r\n              },\r\n              buttonSkip: {\r\n                backgroundColor: theme.palette.secondary.main,\r\n                color: theme.palette.text.primary,\r\n                fontSize: 20,\r\n              },\r\n            }}\r\n          />\r\n          <MenuComponent\r\n            save={this.save}\r\n            loadSave={this.loadSave}\r\n            openHelp={() => { this.setState({ helpOn: true }); }}\r\n          />\r\n          <ToolbarComponent\r\n            lassoSelecting={this.state.lassoSelecting}\r\n            updateLassoSelecting={this.updateLassoSelecting}\r\n            erasing={this.state.erasing}\r\n            updateErasing={this.updateErasing}\r\n            picking={this.state.picking}\r\n            updatePicking={this.updatePicking}\r\n          />\r\n          <PluginMenuComponent app={this} />\r\n          <TimelineBarComponent\r\n            updateActiveEntry={this.updateActiveEntry}\r\n            activeEntry={this.state.activeEntry}\r\n            scenarioData={this.state.scenarioData}\r\n            addEntry={this.addEntry}\r\n            themeDict={this.state.themeDict.other}\r\n          />\r\n          <TimelineEventComponent\r\n            date={this.state.scenarioData[this.state.activeEntry].date}\r\n            event={this.state.scenarioData[this.state.activeEntry].event}\r\n            updateEventDate={this.updateEventDate}\r\n            updateEvent={this.updateEvent}\r\n            deleteEntry={this.deleteEntry}\r\n            activeEntry={this.state.activeEntry}\r\n            clearEntry={this.clearEntry}\r\n            oneEntryLeft={this.state.scenarioData.length === 1}\r\n            themeDict={this.state.themeDict.other}\r\n          />\r\n          <ColorBarComponent ref={this.colorBarRef} themeDict={this.state.themeDict.other} />\r\n          <MapComponent\r\n            activeEntry={this.state.activeEntry}\r\n            getRegionColorByIndex={this.getRegionColorByIndex}\r\n            themeDict={this.state.themeDict.other}\r\n            baseMap={this.baseMap}\r\n            key={this.state.mapKey}\r\n            assignRegions={this.assignRegions}\r\n            lassoSelecting={this.state.lassoSelecting}\r\n            updateLassoSelecting={this.updateLassoSelecting}\r\n            processRegionHoveredOn={this.processRegionHoveredOn}\r\n            processRegionHoveredOut={this.processRegionHoveredOut}\r\n            updatePicking={this.updatePicking}\r\n            picking={this.state.picking}\r\n            setColorBarColor={this.setColorBarColor}\r\n            updateMarkerData={this.updateMarkerData}\r\n            getMarkerData={this.getMarkerData}\r\n            ref={this.mapRef}\r\n          />\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(App);","import { saveAs } from 'file-saver';\r\n\r\n// Expects an generic javascript object, one that is compatible with JSON.stringify and reading\r\nexport default function saveScenario(obj) {\r\n    const blob = new Blob([JSON.stringify(obj)], {type: \"application/json;charset=utf-8\"});\r\n    saveAs(blob, \"save.json\");\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}